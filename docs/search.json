[
  {
    "objectID": "teaching/index.html",
    "href": "teaching/index.html",
    "title": "Teaching",
    "section": "",
    "text": "Welcome to the teaching section! Here, I share resources, tutorials, and guides to help you learn and grow in various fields, including Remote Sensing,Oceanography, Data Analysis, Modeling and Programming. Stay tuned for updates!"
  },
  {
    "objectID": "teaching/index.html#courses-and-syllabi",
    "href": "teaching/index.html#courses-and-syllabi",
    "title": "Teaching",
    "section": "Courses and Syllabi",
    "text": "Courses and Syllabi\n\nCourse 1: Introduction to Oceanography\n\nDescription: This course provides an overview of oceanographic principles, including physical, chemical, and biological aspects of the ocean.\nSyllabus: Download Syllabus (PDF)\n\n\n\nCourse 2: Data Analysis in Environmental Science\n\nDescription: Learn data analysis techniques using R and Python, focusing on environmental datasets.\nSyllabus: Download Syllabus (PDF)\n\n\n\nCourse 3: Advanced Ecological Modeling\n\nDescription: Explore advanced modeling techniques for ecological and environmental systems.\nSyllabus: Download Syllabus (PDF)\n\n\n\nCourse 4: Remote Sensing and GIS for Environmental Applications\n\nDescription: Explore the use of remote sensing and GIS technologies in environmental research and applications.\nSyllabus: Download Syllabus (PDF)\n\n\n\nCourse 5: Oceanographic and Atmospheric Data Analysis\n\nDescription: Learn techniques for analyzing oceanographic and atmospheric datasets.\nSyllabus: Download Syllabus (PDF)\n\n\n\nCourse 6: Hydrological and Coastal Modeling\n\nDescription: Study hydrological and coastal systems using advanced modeling techniques.\nSyllabus: Download Syllabus (PDF)\n\n\n\nCourse 7: Geospatial Big Data Analytics and Cloud Computing\n\nDescription: Dive into geospatial big data analytics and cloud computing platforms like Google Earth Engine.\nSyllabus: Download Syllabus (PDF)\n\n\n\nCourse 8: Artificial Intelligence and Deep Learning in Earth Observation\n\nDescription: Apply AI and deep learning techniques to Earth observation data.\nSyllabus: Download Syllabus (PDF)\n\n\n\nCourse 9: Applications of Remote Sensing in Marine and Coastal Systems\n\nDescription: Investigate the applications of remote sensing in marine and coastal environments.\nSyllabus: Download Syllabus (PDF)"
  },
  {
    "objectID": "teaching/index.html#courses-taught",
    "href": "teaching/index.html#courses-taught",
    "title": "Teaching",
    "section": "Courses Taught",
    "text": "Courses Taught\n\nIntroduction to Environmental Science\nRemote Sensing and GIS for Environmental Applications\nAdvanced Topics in Geosciences"
  },
  {
    "objectID": "teaching/index.html#topics-of-interest-for-future-teaching",
    "href": "teaching/index.html#topics-of-interest-for-future-teaching",
    "title": "Teaching",
    "section": "Topics of Interest for Future Teaching",
    "text": "Topics of Interest for Future Teaching\n\nArtificial Intelligence and Deep Learning in Earth Observation\nGeospatial Big Data Analytics and Cloud Computing (e.g., Google Earth Engine)\nOceanographic and Atmospheric Data Analysis\nHydrological and Coastal Modeling\nData Science in Environmental Research (Python, R, SQL)\nGeostatistics and Predictive Environmental Modeling\nApplications of Remote Sensing in Marine and Coastal Systems"
  },
  {
    "objectID": "teaching/index.html#hydrologic-and-oceanographic-modeling",
    "href": "teaching/index.html#hydrologic-and-oceanographic-modeling",
    "title": "Teaching",
    "section": "Hydrologic and Oceanographic Modeling",
    "text": "Hydrologic and Oceanographic Modeling\n\nThe Soil & Water Assessment Tool (SWAT)\n\n\n\nSWAT Model\n\n\nSWAT is a river basin-scale model developed to quantify the impact of land management practices on water, sediment, and agricultural chemical yields in large complex watersheds with varying soils, land use, and management conditions over long periods of time. My work with SWAT includes:\n\nWatershed delineation and hydrologic response unit (HRU) definition\nCalibration and validation using SWAT-CUP\nScenario analysis for climate change impacts on water resources\nIntegration with GIS for spatial analysis of model outputs\nAssessment of best management practices (BMPs) for reducing nutrient loading\n\n\n\n\nWatershed Modeling\n\n\n\n\nEnvironmental Fluid Dynamics Code (EFDC)\n\n\n\nEFDC Modeling\n\n\nEFDC is a state-of-the-art hydrodynamic model that can be used to simulate aquatic systems in one, two, and three dimensions. It has evolved into one of the most widely used and technically defensible hydrodynamic models in the world. In my research, I utilize EFDC for:\n\nSimulating water circulation patterns in coastal environments\nModeling sediment transport processes\nAnalyzing water quality parameters including dissolved oxygen, nutrients, and contaminants\nStudying thermal dispersion from industrial outfalls\nInvestigating the impacts of engineering modifications on estuarine systems\n\n\n\nOcean Circulation Modeling\n\n\n\nOcean Modeling\n\n\nOcean models are numerical models that simulate the physical processes governing ocean circulation. These models play a crucial role in understanding ocean dynamics, climate patterns, and marine ecosystems. My experience includes working with:\n\nRegional Ocean Modeling System (ROMS) - A free-surface, terrain-following, primitive equations ocean model used by the scientific community for a diverse range of applications\nHYCOM (HYbrid Coordinate Ocean Model) - A data-assimilative hybrid isopycnal-sigma-pressure coordinate ocean model\nModular Ocean Model (MOM) - A numerical ocean model based on the hydrostatic primitive equations\nNEMO (Nucleus for European Modelling of the Ocean) - A state-of-the-art modeling framework for oceanographic research and operational oceanography\n\nMy modeling work focuses on:\n\nSimulating ocean circulation patterns in the Bay of Bengal and Gulf of Mexico\nAnalyzing mesoscale eddies and their impact on primary productivity\nStudying the influence of freshwater discharge on coastal dynamics\nInvestigating climate change impacts on ocean circulation\nDeveloping machine learning approaches to enhance model parameterizations\n\nOcean models represent a synthesis of our theoretical understanding, observational data, and computational capabilities. They enable us to explore complex ocean processes across various temporal and spatial scales, from local coastal dynamics to global circulation patterns. Through my research, I aim to advance our understanding of ocean processes and contribute to more accurate predictions of oceanographic phenomena."
  },
  {
    "objectID": "teaching/index.html#gis-and-remote-sensing",
    "href": "teaching/index.html#gis-and-remote-sensing",
    "title": "Teaching",
    "section": "GIS and Remote Sensing",
    "text": "GIS and Remote Sensing\n\n\n\nRemote Sensing Applications\n\n\nRemote Sensing (RS) has a wide range of applications in the field of physical, biological, coastal, and satellite oceanography. RS in Oceanographic research is the collection of oceanographic, monitoring of coastal and oceanic processes data, and analysis of various processes using space-borne and airborne sensors.\n\nApplication of Remote Sensing Data in Oceanographic Research\n\nSome Important Variables from Remote Sensing Data\n\n\n\n\n\n\n\n\n\nNo.\nParameters\nSatellite Sensors\nUses\n\n\n\n\n1\nSea surface temperature (SST)\nMODIS, AMSRE, TMI\nHelps in the study of climate change and weather forecasting.\n\n\n2\nTotal suspended solids (TSSs)\nDEIMOS-1, LANDSAT, ASTER\nProvides information on hydrodynamic modeling of the coast.\n\n\n3\nSea surface salinity (SSS)\nESA Soil Moisture and Ocean Salinity (SMOS), SMAP SSS\nHelps in monitoring salinity.\n\n\n4\nChlorophyll content\nSeaWiFS, IKONOS, IRS P4 OCM\nHelps in monitoring phytoplankton blooms and concentration of phytoplankton.\n\n\n5\nSea surface height (SSH), wind speed\nTopex/Poseidon, ERS-1, ERS-2\nHelps in monitoring ocean currents, eddies, and waves.\n\n\n6\nSurface current, front, circulation\nPOES/AVHRR, GOES/IMAGER, JASON-1\nHelps in monitoring ocean currents, waves, and wave and current modeling.\n\n\n7\nPotential fishing zone\nNOAA AVHRR, IRS OCM\nHelps in monitoring fishing zones.\n\n\n\n\n\nExample Applications\n\nSaint Martin Island Land Use Land Cover Map\n\n\n\n\nSaint Martin Island\n\n\nSt. Martin’s Island is a small island in the northeastern part of the Bay of Bengal, about 9 km south of the tip of the Cox’s Bazar-Teknaf peninsula, and forming the southernmost part of Bangladesh. It is enriched with numerous marine biotic and abiotic resources including many species of commercial fishes, coral reefs, marine algae, mollusks, etc., that play a significant role in the socio-economic development of the islanders. The socio-economic conditions of the local community are completely dependent on both marine resources and tourism.\n\nLand Use Land Cover Map of the Sundarbans Mangrove Forest, Bangladesh\n\n\n\n\nSundarbans Mangrove Forest\n\n\nSundarbans is the largest natural mangrove forest in the world. It lies between latitude 21° 27′ 30″ and 22° 30′ 00″ North and longitude 89° 02′ 00″ and 90° 00′ 00″ East, with a total area of 10,000 km². Sixty percent of the property lies in Bangladesh and the rest in India.\nImage Classification Methods\nRandom forest (RF) is a supervised learning algorithm. The “forest” it builds is an ensemble of decision trees, usually trained with the “bagging” method (Breiman, 2001). This algorithm is used for satellite image classification using Google Earth Engine and Landsat 8 imageries. Breiman proposed RF in 2001 for classification and clustering. RF grows many decision trees for classification. To classify a new object, the input vector is run through each decision tree in the forest.\n\n\n\nLandsat Timelapse\n\n\nTimelapse for a small island in Bangladesh."
  },
  {
    "objectID": "projects/index.html",
    "href": "projects/index.html",
    "title": "Projects",
    "section": "",
    "text": "Projects\nWelcome to the Projects section! Here, you can find detailed information about various projects I have worked on. Stay tuned for updates.\n\n\nCurrent Projects\n\nDetection and tracking of mesoscale eddies in the Bay of Bengal using Satellite altimetry data\nHydrologic and geospatial analyses to quantify surface-water connectivity of Lower Mississippi river and develop framework for evaluating tradeoffs between limiting invasion risks and maintaining hydrologic connectivity of oxbow lakes\nApplications of Machine learning in Computational Oceanographic Research\nIntegrating Machine Learning and Remote Sensing for Long-Term Monitoring of Chl-a in Chilika Lake, India\nSimulation of the land use/land cover and land surface temperature change in the Chittagong City Corporation using QGIS\nSimulation of the future land use/land cover change in the Starkville, Mississippi, USA\nMarine Spatial Planning to support Integrated Coastal Zone Management in Bangladesh\nDevelopment of a Decision Support System for Coastal Flood Risk Management\nAssessment of Coral Reef Health Using Remote Sensing Techniques\nAnalysis of Microplastic Pollution in Coastal Waters\nModeling the Impact of Sea Level Rise on Coastal Communities\nIntegrated Coastal Water Monitoring and Modeling\n\n\n\nCompleted Projects\n\nLand use assessment and forecasting in the Teknaf Upazila, Bangladesh\nFuture of the Irrawaddy Delta with decreasing fluvial sediment supply and SLR\nSpatio–temporal variability of SST, SSS, and Primary productivity in the Bay of Bengal\nA case study for the Biodiversity Assessment and land cover in the Sundarbans mangrove forest\nCollaborative Research: The tropicalization of Western Atlantic seagrass beds (Volunteered in Dr. James Douglass’s marine ecology lab)\nStatus and Future Trends of the Bangladesh Coastal Zone Management and coastal risks\nPresent status of impacts of climate change and adaptations in Bangladesh coastal areas\nVegetation and Land cover analysis in response to Precipitation and land surface temperature of Oktibbeha County of Mississippi, USA\nIntegrated Management of Coastal Resources of Saint Martin’s Island in Bangladesh"
  },
  {
    "objectID": "posts/Species Distribution modeling/index.html",
    "href": "posts/Species Distribution modeling/index.html",
    "title": "Species distribution modeling",
    "section": "",
    "text": "You will find basic R codes\n\nwildtype&lt;- c(103,1125,504,608,794,698,920,535,842,765,945,1005,724,498,727)\nprint(wildtype)\n\n [1]  103 1125  504  608  794  698  920  535  842  765  945 1005  724  498  727\n\n\n#2. Create variable called “resistant”—-\n\nresistant&lt;- c(768, 230, 854 ,637,426, 482, 1118, 524, 604 ,730 ,17 ,421, 587, 782 ,171)\nprint(resistant)\n\n [1]  768  230  854  637  426  482 1118  524  604  730   17  421  587  782  171\n\n\n#3. combine the the vectors into data frame called “miner”—-\n\nminer&lt;- data.frame(\"wild\"=wildtype,\"resist\"=resistant)\nprint(miner)\n\n   wild resist\n1   103    768\n2  1125    230\n3   504    854\n4   608    637\n5   794    426\n6   698    482\n7   920   1118\n8   535    524\n9   842    604\n10  765    730\n11  945     17\n12 1005    421\n13  724    587\n14  498    782\n15  727    171\n\n\n#4. Calculate the mean and variance of the wildtype and resistant from the data frame “miner”—-\n\nprint(paste0(\"The mean of wildtype is \",round(x=mean(miner$wild),digits=3),\" and the variance is \",round(x=var(miner$wild),digits=3)))\n\n[1] \"The mean of wildtype is 719.533 and the variance is 63014.552\"\n\n\n\nprint(paste0(\"The mean of resistant is \",round(x=mean(miner$resist),digits=3),\" and the variance is \",round(x=var(miner$resist),digits=3)))\n\n[1] \"The mean of resistant is 556.733 and the variance is 80529.21\"\n\n\n\n5. write a function for standard error called “stderror”—-\nformula for standard error is standard deviation/square root ($ {(n)}$) of sample size\n\nstderror&lt;- function(x,n=length(x)){\n  return(sd(x)/sqrt(n))\n}\n\n#…apply the function to the data frame “miner”—-\n\nprint(paste0(\"The standard error of wildtype is \",round(x=stderror(miner$wild),digits=3)))\n\n[1] \"The standard error of wildtype is 64.815\"\n\n\n\nprint(paste0(\"The standard error of resistant is \",round(x=stderror(miner$resist),digits=3)))\n\n[1] \"The standard error of resistant is 73.271\"\n\n\n#6. write a function for growth rate called “rate” —-\nwhere, nt is the vector abunace at t,ntplus the vector of abunance at year t+1 and t for vector of years and return plot for growth rate … load data from laptop"
  },
  {
    "objectID": "posts/Practical Ecological data analysis with R/index.html",
    "href": "posts/Practical Ecological data analysis with R/index.html",
    "title": "Basic R",
    "section": "",
    "text": "You will find basic R codes\n\n1+2\n\n[1] 3"
  },
  {
    "objectID": "posts/Popular R packages used in Oceanography, Fisheries and environmental science/index.html",
    "href": "posts/Popular R packages used in Oceanography, Fisheries and environmental science/index.html",
    "title": "Popular R packages used in Oceanography, Fisheries and environmental science",
    "section": "",
    "text": "R is an open-source software environment for statistical computing and graphics. It is widely used in various scientific fields, including oceanography, fisheries, and environmental science. Below is a list of popular R packages and their uses in these domains:\n\nPackages and Their Uses\n\nOce: Calculate seawater properties, analyze ADCP measurements, Argo float data, CTD measurements, and more.\nNcdf4: Read and write NetCDF files for handling multidimensional data.\nOceanmap: Plot 2D oceanographic data and support NetCDF formats.\nLIM: Solve linear inverse problems, such as food web analysis.\nAquaEnv: Model aquatic chemical systems and perform sensitivity analysis.\nMarelac: Provide datasets, constants, and utilities for marine science.\nOceanView: Visualize 2D and 3D oceanographic data.\nRobis: Access ocean biogeographic information system data.\nDiveMove: Analyze time-depth recorder (TDR) data for diving behavior.\nRaster: Manipulate geographic raster data for spatial analysis.\nCaret/mlr/e1071: Train and visualize classification and regression models.\nGgplot2: Create high-quality data visualizations.\nAngstroms: Tools for regional ocean modeling systems.\nGISTools/sp/t_map: Create maps and manipulate spatial data.\nSimba: Perform similarity analysis for vegetation data.\nDplyr: Simplify data manipulation with a consistent grammar.\nVegan/BiodiversityR: Analyze ecological diversity and ordination methods.\nDeSolve: Solve differential equations for dynamic models.\nPBSmapping: Create 2D plots similar to GIS systems.\nMizer: Model multispecies and community size spectra in marine environments.\n\n\n\nPython Packages and Their Uses\n\nxarray: For working with labeled multi-dimensional arrays, commonly used for analyzing NetCDF files in oceanography.\nnetCDF4: Read and write NetCDF files, a standard format for oceanographic and atmospheric data.\ncartopy: Create maps and visualize geospatial data, often used in environmental science.\nmatplotlib: A versatile library for creating static, animated, and interactive visualizations.\nseaborn: Simplifies statistical data visualization, built on top of matplotlib.\npandas: Handle and analyze structured data, such as time-series data in fisheries.\nnumpy: Perform numerical computations, including array manipulations and mathematical operations.\nscipy: Provides scientific computing tools, including optimization, integration, and signal processing.\npyproj: Perform cartographic projections and coordinate transformations.\nshapely: Analyze and manipulate geometric objects, useful for spatial data.\nrasterio: Read and write geospatial raster data, often used in remote sensing.\ngeopandas: Extend pandas to handle geospatial data, including shapefiles and GeoJSON.\npyresample: Resample geospatial data, commonly used in satellite data processing.\npyroms: Tools for working with the Regional Ocean Modeling System (ROMS).\npygslib: Geostatistical library for environmental and geological data analysis.\npyseidon: Analyze and visualize oceanographic data, including ADCP and CTD measurements.\nobspy: Process and analyze seismological data, sometimes used in marine geophysics.\ntensorflow/keras: Build and train machine learning models for environmental data analysis.\nscikit-learn: Perform machine learning tasks, such as classification and regression, on environmental datasets.\ndask: Handle large datasets and parallelize computations, useful for big data in oceanography.\n\nThese Python packages complement the R packages listed above and are widely used in oceanography, fisheries, and environmental science.\nThis list is not exhaustive and will be updated regularly. For a complete list of R packages, visit CRAN."
  },
  {
    "objectID": "posts/Making temperature-salinity diagrams/index.html",
    "href": "posts/Making temperature-salinity diagrams/index.html",
    "title": "Making temperature-salinity diagrams",
    "section": "",
    "text": "You will find basic R codes\n\n# Load necessary library\nlibrary(oce)\n\nWarning: package 'oce' was built under R version 4.3.3\n\n\nLoading required package: gsw\n\n\nWarning: package 'gsw' was built under R version 4.3.3\n\n# Create a sample dataset for temperature, salinity, and pressure\ndata &lt;- data.frame(\n  salinity = c(30, 32, 34, 36, 38),\n  temperature = c(10, 15, 20, 25, 30),\n  pressure = c(0, 5, 10, 15, 20)\n)\n\n# Convert the dataset to a ctd object\nctd_data &lt;- as.ctd(salinity = data$salinity, \n                   temperature = data$temperature, \n                   pressure = data$pressure)\n\n# Create a temperature-salinity diagram\nplotTS(ctd_data, \n       xlab = \"Salinity (PSU)\", \n       ylab = \"Temperature (°C)\", \n       main = \"Temperature-Salinity Diagram\")"
  },
  {
    "objectID": "posts/index.html",
    "href": "posts/index.html",
    "title": "Posts",
    "section": "",
    "text": "Posts\nExplore our collection of posts:\n\nAnalysis of Argo Float Data in the Bay of Bengal\nBasic R\nEcological modeling\nHow to Make Dynamic Maps with Python\nMachine Learning\nMaking Temperature-Salinity Diagrams\nPCA\nPopular R Packages Used in Oceanography, Fisheries, and Environmental Science\nPost with Code\nPractical Ecological Data Analysis with R\nSpecies Distribution Modeling\nWorld Bioclimatic Data Downloading, Analysis, and Visualization\nGIS Remote Sensing Data Analysis\nGeoscience Analysis\nMultidimensional Data Analysis"
  },
  {
    "objectID": "posts/GIS Remote sensing data analysis/index.html",
    "href": "posts/GIS Remote sensing data analysis/index.html",
    "title": "Ecological data analysis with R",
    "section": "",
    "text": "Data analysis with R.\n\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n# Create a sample ecological dataset\ndata &lt;- data.frame(\n  Species = rep(c(\"Species A\", \"Species B\", \"Species C\"), each = 10),\n  Abundance = c(rpois(10, 5), rpois(10, 10), rpois(10, 15)),\n  Location = rep(c(\"Site 1\", \"Site 2\"), each = 15)\n)\n\n# Summarize data by species\nsummary_data &lt;- data %&gt;%\n  group_by(Species) %&gt;%\n  summarize(Mean_Abundance = mean(Abundance), .groups = 'drop')\n\n# Print summary\nprint(summary_data)\n\n# A tibble: 3 × 2\n  Species   Mean_Abundance\n  &lt;chr&gt;              &lt;dbl&gt;\n1 Species A            5.1\n2 Species B           10.3\n3 Species C           15.2\n\n# Plot species abundance by location\nggplot(data, aes(x = Species, y = Abundance, fill = Location)) +\n  geom_boxplot() +\n  labs(title = \"Species Abundance by Location\",\n       x = \"Species\",\n       y = \"Abundance\") +\n  theme_minimal()"
  },
  {
    "objectID": "posts/Ecological modeling/index.html",
    "href": "posts/Ecological modeling/index.html",
    "title": "Ecological modeling",
    "section": "",
    "text": "You will find basic R codes\n\n1+2\n\n[1] 3\n\n\n\n# Load necessary library\nlibrary(deSolve)\n\nWarning: package 'deSolve' was built under R version 4.3.3\n\n# Define a simple Lotka-Volterra predator-prey model\nlotka_volterra &lt;- function(t, state, parameters) {\n  with(as.list(c(state, parameters)), {\n    dPrey &lt;- prey * (alpha - beta * predator)\n    dPredator &lt;- predator * (delta * prey - gamma)\n    list(c(dPrey, dPredator))\n  })\n}\n\n# Initial state values\nstate &lt;- c(prey = 40, predator = 9)\n\n# Parameters: growth rate of prey, predation rate, reproduction rate of predator, and death rate of predator\nparameters &lt;- c(alpha = 0.1, beta = 0.02, delta = 0.01, gamma = 0.1)\n\n# Time sequence for the simulation\ntime &lt;- seq(0, 200, by = 1)\n\n# Solve the differential equations\noutput &lt;- ode(y = state, times = time, func = lotka_volterra, parms = parameters)\n\n# Convert output to a data frame\noutput &lt;- as.data.frame(output)\n\n# Plot the results\nplot(output$time, output$prey, type = \"l\", col = \"blue\", xlab = \"Time\", ylab = \"Population\", main = \"Lotka-Volterra Predator-Prey Model\")\nlines(output$time, output$predator, col = \"red\")\nlegend(\"topright\", legend = c(\"Prey\", \"Predator\"), col = c(\"blue\", \"red\"), lty = 1)\n\n\n\n\n\n\n\n\n\n# Load necessary library\nlibrary(ggplot2)\n\nWarning: package 'ggplot2' was built under R version 4.3.3\n\n# Define the logistic growth function\nlogistic_growth &lt;- function(t, K, r, N0) {\n  K / (1 + ((K - N0) / N0) * exp(-r * t))\n}\n\n# Parameters for the logistic growth curve\nK &lt;- 100  # Carrying capacity\nr &lt;- 0.2  # Growth rate\nN0 &lt;- 10  # Initial population size\n\ntime &lt;- seq(0, 50, by = 1)  # Time sequence\n\n# Calculate population size over time\npopulation &lt;- logistic_growth(time, K, r, N0)\n\n# Create a data frame for plotting\ndata &lt;- data.frame(Time = time, Population = population)\n\n# Plot the logistic growth curve\nggplot(data, aes(x = Time, y = Population)) +\n  geom_line(color = \"blue\", size = 1) +\n  labs(title = \"Logistic Growth Curve for Fish Population\",\n       x = \"Time\",\n       y = \"Population Size\") +\n  theme_minimal()\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead."
  },
  {
    "objectID": "posts/Analysis of Argo Float Data in the Bay of Bengal/index.html",
    "href": "posts/Analysis of Argo Float Data in the Bay of Bengal/index.html",
    "title": "Analysis of Argo Float Data in the Bay of Bengal",
    "section": "",
    "text": "You will find basic R codes\n\n1+2\n\n[1] 3"
  },
  {
    "objectID": "Notebook/EarthAccess.html",
    "href": "Notebook/EarthAccess.html",
    "title": "blog",
    "section": "",
    "text": "import earthaccess\nimport xarray as xr\nfrom xarray.backends.api import open_datatree\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\nauth = earthaccess.login(persist=True)\n\n\nresults = earthaccess.search_datasets(\n    keyword=\"L2 ocean color\",\n    instrument=\"olci\",\n)\nset((i.summary()[\"short-name\"] for i in results))\n\nset()\n\n\n\ntspan = (\"2020-10-15\", \"2020-10-23\")\nbbox = (-89.4474, 30.064, -88.337, 30.064)\ncc = (0, 50)\nresults = earthaccess.search_data(\n    short_name=\"OLCIS3A_L2_EFR_OC\",\n    temporal=tspan,\n    bounding_box=bbox,\n    cloud_cover=cc,\n)\n\n\npaths = earthaccess.download(results, \"data\")\n\n\n\n\n\n\n\n\n\n\n\npaths[0]\n\n'data\\\\S3A_OLCI_EFRNT.20201015T155218.L2.OC.nc'\n\n\n\nfrom affine import Affine\nprod = xr.open_dataset(paths[0])\nobs = xr.open_dataset(paths[0], group=\"geophysical_data\")\nnav = xr.open_dataset(paths[0], group=\"navigation_data\")\nnav = (\n    nav\n    .set_coords((\"longitude\", \"latitude\"))\n    .rename({\"pixel_control_points\": \"pixels_per_line\"})\n)\ndataset = xr.merge((prod, obs, nav.coords))\n# set latitude and longitude as coordinates\ndataset = dataset.set_coords((\"latitude\", \"longitude\"))\n# slice (-89.4474, 30.064, -88.337, 30.064)\n# dataset = dataset.sel(\n#     latitude=slice(30.064, 30.064),\n#     longitude=slice(-89.4474, -88.337),\n# )\ndataset\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;xarray.Dataset&gt; Size: 1GB\nDimensions:    (number_of_lines: 4091, pixels_per_line: 4865)\nCoordinates:\n    longitude  (number_of_lines, pixels_per_line) float32 80MB ...\n    latitude   (number_of_lines, pixels_per_line) float32 80MB ...\nDimensions without coordinates: number_of_lines, pixels_per_line\nData variables: (12/16)\n    aot_865    (number_of_lines, pixels_per_line) float32 80MB ...\n    angstrom   (number_of_lines, pixels_per_line) float32 80MB ...\n    Rrs_400    (number_of_lines, pixels_per_line) float32 80MB ...\n    Rrs_412    (number_of_lines, pixels_per_line) float32 80MB ...\n    Rrs_443    (number_of_lines, pixels_per_line) float32 80MB ...\n    Rrs_490    (number_of_lines, pixels_per_line) float32 80MB ...\n    ...         ...\n    Rrs_674    (number_of_lines, pixels_per_line) float32 80MB ...\n    Rrs_681    (number_of_lines, pixels_per_line) float32 80MB ...\n    Rrs_709    (number_of_lines, pixels_per_line) float32 80MB ...\n    chlor_a    (number_of_lines, pixels_per_line) float32 80MB ...\n    Kd_490     (number_of_lines, pixels_per_line) float32 80MB ...\n    l2_flags   (number_of_lines, pixels_per_line) int32 80MB ...\nAttributes: (12/46)\n    title:                          OLCIS3A Level-2 Data\n    product_name:                   S3A_OLCI_EFRNT.20201015T155218.L2.OC.nc\n    processing_version:             R2022.0\n    orbit_number:                   24282\n    history:                        l2gen par=/data9/sdpsoper/vdc/vpu20/workb...\n    instrument:                     OLCI\n    ...                             ...\n    geospatial_lon_max:             -79.75462\n    geospatial_lon_min:             -94.42871\n    startDirection:                 Descending\n    endDirection:                   Descending\n    day_night_flag:                 Day\n    earth_sun_distance_correction:  1.0060665607452393xarray.DatasetDimensions:number_of_lines: 4091pixels_per_line: 4865Coordinates: (2)longitude(number_of_lines, pixels_per_line)float32...long_name :Longitudeunits :degrees_eaststandard_name :longitudevalid_min :-180.0valid_max :180.0[19902715 values with dtype=float32]latitude(number_of_lines, pixels_per_line)float32...long_name :Latitudeunits :degrees_northstandard_name :latitudevalid_min :-90.0valid_max :90.0[19902715 values with dtype=float32]Data variables: (16)aot_865(number_of_lines, pixels_per_line)float32...long_name :Aerosol optical thickness at 865 nmstandard_name :atmosphere_absorption_optical_thickness_due_to_ambient_aerosolvalid_min :0valid_max :30000[19902715 values with dtype=float32]angstrom(number_of_lines, pixels_per_line)float32...long_name :Aerosol Angstrom exponent, 443 to 865 nmstandard_name :aerosol_angstrom_exponentvalid_min :-30000valid_max :5000[19902715 values with dtype=float32]Rrs_400(number_of_lines, pixels_per_line)float32...long_name :Remote sensing reflectance at 400 nmunits :sr^-1standard_name :surface_ratio_of_upwelling_radiance_emerging_from_sea_water_to_downwelling_radiative_flux_in_airvalid_min :-30000valid_max :25000solar_irradiance :1513.67[19902715 values with dtype=float32]Rrs_412(number_of_lines, pixels_per_line)float32...long_name :Remote sensing reflectance at 412 nmunits :sr^-1standard_name :surface_ratio_of_upwelling_radiance_emerging_from_sea_water_to_downwelling_radiative_flux_in_airvalid_min :-30000valid_max :25000solar_irradiance :1708.0[19902715 values with dtype=float32]Rrs_443(number_of_lines, pixels_per_line)float32...long_name :Remote sensing reflectance at 443 nmunits :sr^-1standard_name :surface_ratio_of_upwelling_radiance_emerging_from_sea_water_to_downwelling_radiative_flux_in_airvalid_min :-30000valid_max :25000solar_irradiance :1889.97[19902715 values with dtype=float32]Rrs_490(number_of_lines, pixels_per_line)float32...long_name :Remote sensing reflectance at 490 nmunits :sr^-1standard_name :surface_ratio_of_upwelling_radiance_emerging_from_sea_water_to_downwelling_radiative_flux_in_airvalid_min :-30000valid_max :25000solar_irradiance :1936.26[19902715 values with dtype=float32]Rrs_510(number_of_lines, pixels_per_line)float32...long_name :Remote sensing reflectance at 510 nmunits :sr^-1standard_name :surface_ratio_of_upwelling_radiance_emerging_from_sea_water_to_downwelling_radiative_flux_in_airvalid_min :-30000valid_max :25000solar_irradiance :1919.6499[19902715 values with dtype=float32]Rrs_560(number_of_lines, pixels_per_line)float32...long_name :Remote sensing reflectance at 560 nmunits :sr^-1standard_name :surface_ratio_of_upwelling_radiance_emerging_from_sea_water_to_downwelling_radiative_flux_in_airvalid_min :-30000valid_max :25000solar_irradiance :1796.85[19902715 values with dtype=float32]Rrs_620(number_of_lines, pixels_per_line)float32...long_name :Remote sensing reflectance at 620 nmunits :sr^-1standard_name :surface_ratio_of_upwelling_radiance_emerging_from_sea_water_to_downwelling_radiative_flux_in_airvalid_min :-30000valid_max :25000solar_irradiance :1649.14[19902715 values with dtype=float32]Rrs_665(number_of_lines, pixels_per_line)float32...long_name :Remote sensing reflectance at 665 nmunits :sr^-1standard_name :surface_ratio_of_upwelling_radiance_emerging_from_sea_water_to_downwelling_radiative_flux_in_airvalid_min :-30000valid_max :25000solar_irradiance :1530.15[19902715 values with dtype=float32]Rrs_674(number_of_lines, pixels_per_line)float32...long_name :Remote sensing reflectance at 674 nmunits :sr^-1standard_name :surface_ratio_of_upwelling_radiance_emerging_from_sea_water_to_downwelling_radiative_flux_in_airvalid_min :-30000valid_max :25000solar_irradiance :1494.72[19902715 values with dtype=float32]Rrs_681(number_of_lines, pixels_per_line)float32...long_name :Remote sensing reflectance at 681 nmunits :sr^-1standard_name :surface_ratio_of_upwelling_radiance_emerging_from_sea_water_to_downwelling_radiative_flux_in_airvalid_min :-30000valid_max :25000solar_irradiance :1468.86[19902715 values with dtype=float32]Rrs_709(number_of_lines, pixels_per_line)float32...long_name :Remote sensing reflectance at 709 nmunits :sr^-1standard_name :surface_ratio_of_upwelling_radiance_emerging_from_sea_water_to_downwelling_radiative_flux_in_airvalid_min :-30000valid_max :25000solar_irradiance :1403.1101[19902715 values with dtype=float32]chlor_a(number_of_lines, pixels_per_line)float32...long_name :Chlorophyll Concentration, OCI Algorithmunits :mg m^-3standard_name :mass_concentration_of_chlorophyll_in_sea_watervalid_min :0.001valid_max :100.0reference :Hu, C., Lee Z., and Franz, B.A. (2012). Chlorophyll-a algorithms for oligotrophic oceans: A novel approach based on three-band reflectance difference, J. Geophys. Res., 117, C01011, doi:10.1029/2011JC007395.[19902715 values with dtype=float32]Kd_490(number_of_lines, pixels_per_line)float32...long_name :Diffuse attenuation coefficient at 490 nm, KD2 algorithmunits :m^-1valid_min :50valid_max :30000[19902715 values with dtype=float32]l2_flags(number_of_lines, pixels_per_line)int32...long_name :Level-2 Processing Flagsvalid_min :-2147483648valid_max :2147483647flag_masks :[          1           2           4           8          16          32\n          64         128         256         512        1024        2048\n        4096        8192       16384       32768       65536      131072\n      262144      524288     1048576     2097152     4194304     8388608\n    16777216    33554432    67108864   134217728   268435456   536870912\n  1073741824 -2147483648]flag_meanings :ATMFAIL LAND PRODWARN HIGLINT HILT HISATZEN COASTZ SPARE STRAYLIGHT CLDICE COCCOLITH TURBIDW HISOLZEN SPARE LOWLW CHLFAIL NAVWARN ABSAER SPARE MAXAERITER MODGLINT CHLWARN ATMWARN SPARE SEAICE NAVFAIL FILTER SPARE BOWTIEDEL HIPOL PRODFAIL SPARE[19902715 values with dtype=int32]Indexes: (0)Attributes: (46)title :OLCIS3A Level-2 Dataproduct_name :S3A_OLCI_EFRNT.20201015T155218.L2.OC.ncprocessing_version :R2022.0orbit_number :24282history :l2gen par=/data9/sdpsoper/vdc/vpu20/workbuf/Oa01_radiance.nc.param metafile=S3A_OLCI_EFRNT.20201015T155218.L2.OC.nc.metainstrument :OLCIplatform :Sentinel-3AConventions :CF-1.6 ACDD-1.3license :https://science.nasa.gov/earth-science/earth-science-data/data-information-policy/naming_authority :gov.nasa.gsfc.sci.oceandataid :R2022.0/L2/S3A_OLCI_EFRNT.20201015T155218.L2.OC.ncdate_created :2022-04-28T07:30:18.000Zkeywords_vocabulary :NASA Global Change Master Directory (GCMD) Science Keywordskeywords :Earth Science &gt; Oceans &gt; Ocean Optics &gt; Ocean Colorstandard_name_vocabulary :CF Standard Name Table v36institution :NASA Goddard Space Flight Center, Ocean Ecology Laboratory, Ocean Biology Processing Groupcreator_name :NASA/GSFC/OBPGcreator_email :data@oceancolor.gsfc.nasa.govcreator_url :https://oceandata.sci.gsfc.nasa.govproject :Ocean Biology Processing Group (NASA/GSFC/OBPG)publisher_name :NASA/GSFC/OBPGpublisher_url :https://oceandata.sci.gsfc.nasa.govpublisher_email :data@oceancolor.gsfc.nasa.govprocessing_level :L2cdm_data_type :swathspatialResolution :300 mtime_coverage_start :2020-10-15T15:52:13.792Ztime_coverage_end :2020-10-15T15:55:13.757Zstart_center_longitude :-86.23588start_center_latitude :30.442305end_center_longitude :-88.6665end_center_latitude :19.835049northernmost_latitude :31.41441southernmost_latitude :18.546497easternmost_longitude :-79.75462westernmost_longitude :-94.42871geospatial_lat_units :degrees_northgeospatial_lon_units :degrees_eastgeospatial_lat_max :31.41441geospatial_lat_min :18.546497geospatial_lon_max :-79.75462geospatial_lon_min :-94.42871startDirection :DescendingendDirection :Descendingday_night_flag :Dayearth_sun_distance_correction :1.0060665607452393\n\n\n\nimport datatree\n\n\n            \n            \n\n\n\n---------------------------------------------------------------------------\nModuleNotFoundError                       Traceback (most recent call last)\nCell In[69], line 1\n----&gt; 1 import datatree\n\nModuleNotFoundError: No module named 'datatree'\n\n\n\n\narray = dataset[\"Rrs_709\"]\narray.attrs.update(\n    {\n        \"units\": f'({dataset[\"Rrs_709\"].attrs[\"units\"]})',\n    }\n)\n\narray\n# save to geotiff\narray\n# array.plot(\n#     x=\"longitude\", y=\"latitude\", aspect=2, size=4, cmap=\"jet\", robust=True\n# )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;xarray.DataArray 'Rrs_709' (number_of_lines: 4091, pixels_per_line: 4865)&gt; Size: 80MB\narray([[nan, nan, nan, ..., nan, nan, nan],\n       [nan, nan, nan, ..., nan, nan, nan],\n       [nan, nan, nan, ..., nan, nan, nan],\n       ...,\n       [nan, nan, nan, ..., nan, nan, nan],\n       [nan, nan, nan, ..., nan, nan, nan],\n       [nan, nan, nan, ..., nan, nan, nan]], dtype=float32)\nCoordinates:\n    longitude  (number_of_lines, pixels_per_line) float32 80MB ...\n    latitude   (number_of_lines, pixels_per_line) float32 80MB ...\nDimensions without coordinates: number_of_lines, pixels_per_line\nAttributes:\n    long_name:         Remote sensing reflectance at 709 nm\n    units:             ((((((((((((sr^-1))))))))))))\n    standard_name:     surface_ratio_of_upwelling_radiance_emerging_from_sea_...\n    valid_min:         -30000\n    valid_max:         25000\n    solar_irradiance:  1403.1101xarray.DataArray'Rrs_709'number_of_lines: 4091pixels_per_line: 4865nan nan nan nan nan nan nan nan ... nan nan nan nan nan nan nan nanarray([[nan, nan, nan, ..., nan, nan, nan],\n       [nan, nan, nan, ..., nan, nan, nan],\n       [nan, nan, nan, ..., nan, nan, nan],\n       ...,\n       [nan, nan, nan, ..., nan, nan, nan],\n       [nan, nan, nan, ..., nan, nan, nan],\n       [nan, nan, nan, ..., nan, nan, nan]], dtype=float32)Coordinates: (2)longitude(number_of_lines, pixels_per_line)float32...long_name :Longitudeunits :degrees_eaststandard_name :longitudevalid_min :-180.0valid_max :180.0[19902715 values with dtype=float32]latitude(number_of_lines, pixels_per_line)float32...long_name :Latitudeunits :degrees_northstandard_name :latitudevalid_min :-90.0valid_max :90.0[19902715 values with dtype=float32]Indexes: (0)Attributes: (6)long_name :Remote sensing reflectance at 709 nmunits :((((((((((((sr^-1))))))))))))standard_name :surface_ratio_of_upwelling_radiance_emerging_from_sea_water_to_downwelling_radiative_flux_in_airvalid_min :-30000valid_max :25000solar_irradiance :1403.1101\n\n\n\nresults = earthaccess.search_datasets(instrument=\"olci\")\nfor item in results:\n    summary = item.summary()\n    print(summary[\"short-name\"])\n    #OLCIS3A_L2_EFR_OC\n\nS3A_OL_1_EFR\nMERGED_S3_OLCI_L3b_CYANTC\nMERGED_S3_OLCI_L3b_ILW\nMERGED_S3_OLCI_L3m_CYAN\nMERGED_S3_OLCI_L3m_CYANTC\nMERGED_S3_OLCI_L3m_ILW\nOLCIS3A_L1_EFR\nOLCIS3A_L1_ERR\nOLCIS3A_L2_EFR_IOP\nOLCIS3A_L2_EFR_IOP_NRT\nOLCIS3A_L2_EFR_OC\nOLCIS3A_L2_EFR_OC_NRT\nOLCIS3A_L2_ERR_IOP\nOLCIS3A_L2_ERR_IOP_NRT\nOLCIS3A_L2_ERR_OC\nOLCIS3A_L2_ERR_OC_NRT\nOLCIS3A_L2_ILW\nOLCIS3A_L3b_ERR_CHL\nOLCIS3A_L3b_ERR_CHL_NRT\nOLCIS3A_L3b_ERR_IOP\nOLCIS3A_L3b_ERR_IOP_NRT\nOLCIS3A_L3b_ERR_KD\nOLCIS3A_L3b_ERR_KD_NRT\nOLCIS3A_L3b_ERR_RRS\nOLCIS3A_L3b_ERR_RRS_NRT\nOLCIS3A_L3b_ILW\nOLCIS3A_L3m_ERR_CHL\nOLCIS3A_L3m_ERR_CHL_NRT\nOLCIS3A_L3m_ERR_IOP\nOLCIS3A_L3m_ERR_IOP_NRT\nOLCIS3A_L3m_ERR_KD\nOLCIS3A_L3m_ERR_KD_NRT\nOLCIS3A_L3m_ERR_RRS\nOLCIS3A_L3m_ERR_RRS_NRT\nOLCIS3A_L3m_ILW\nOLCIS3B_L1_EFR\nOLCIS3B_L1_ERR\nOLCIS3B_L2_EFR_IOP\nOLCIS3B_L2_EFR_IOP_NRT\nOLCIS3B_L2_EFR_OC\nOLCIS3B_L2_EFR_OC_NRT\nOLCIS3B_L2_ERR_IOP\nOLCIS3B_L2_ERR_IOP_NRT\nOLCIS3B_L2_ERR_OC\nOLCIS3B_L2_ERR_OC_NRT\nOLCIS3B_L2_ILW\nOLCIS3B_L3b_ERR_CHL\nOLCIS3B_L3b_ERR_CHL_NRT\nOLCIS3B_L3b_ERR_IOP\nOLCIS3B_L3b_ERR_IOP_NRT\nOLCIS3B_L3b_ERR_KD\nOLCIS3B_L3b_ERR_KD_NRT\nOLCIS3B_L3b_ERR_RRS\nOLCIS3B_L3b_ERR_RRS_NRT\nOLCIS3B_L3b_ILW\nOLCIS3B_L3m_ERR_CHL\nOLCIS3B_L3m_ERR_CHL_NRT\nOLCIS3B_L3m_ERR_IOP\nOLCIS3B_L3m_ERR_IOP_NRT\nOLCIS3B_L3m_ERR_KD\nOLCIS3B_L3m_ERR_KD_NRT\nOLCIS3B_L3m_ERR_RRS\nOLCIS3B_L3m_ERR_RRS_NRT\nOLCIS3B_L3m_ILW\nS3A_OL_1_ERR\nS3A_SY_2_SYN\nS3B_OL_1_EFR\nS3B_OL_1_ERR\nS3B_SY_2_SYN\n\n\n\nresults = earthaccess.search_data(\n    short_name=\"OLCIS3A_L2_EFR_OC\",\n    count=1,\n)\ntspan = (\"2024-01-01\", \"2024-10-31\")\nbbox = (-89.4474, 30.064, -88.337, 30.064)\nclouds = (0, 50)\nresults = earthaccess.search_data(\n    short_name=\"OLCIS3A_L2_EFR_OC\",\n    temporal=tspan,\n    bounding_box=bbox,\n    cloud_cover=clouds,\n)\npaths = earthaccess.open(results)\n\n\n\n\n\n\n\n\n\n\n\ndataset = xr.open_dataset(paths[0], engine='netcdf4')\n\n\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\nCell In[20], line 1\n----&gt; 1 dataset = xr.open_dataset(paths[0], engine='netcdf4')\n\nFile c:\\Users\\hafez\\miniconda3\\Lib\\site-packages\\xarray\\backends\\api.py:571, in open_dataset(filename_or_obj, engine, chunks, cache, decode_cf, mask_and_scale, decode_times, decode_timedelta, use_cftime, concat_characters, decode_coords, drop_variables, inline_array, chunked_array_type, from_array_kwargs, backend_kwargs, **kwargs)\n    559 decoders = _resolve_decoders_kwargs(\n    560     decode_cf,\n    561     open_backend_dataset_parameters=backend.open_dataset_parameters,\n   (...)\n    567     decode_coords=decode_coords,\n    568 )\n    570 overwrite_encoded_chunks = kwargs.pop(\"overwrite_encoded_chunks\", None)\n--&gt; 571 backend_ds = backend.open_dataset(\n    572     filename_or_obj,\n    573     drop_variables=drop_variables,\n    574     **decoders,\n    575     **kwargs,\n    576 )\n    577 ds = _dataset_from_backend_dataset(\n    578     backend_ds,\n    579     filename_or_obj,\n   (...)\n    589     **kwargs,\n    590 )\n    591 return ds\n\nFile c:\\Users\\hafez\\miniconda3\\Lib\\site-packages\\xarray\\backends\\netCDF4_.py:645, in NetCDF4BackendEntrypoint.open_dataset(self, filename_or_obj, mask_and_scale, decode_times, concat_characters, decode_coords, drop_variables, use_cftime, decode_timedelta, group, mode, format, clobber, diskless, persist, lock, autoclose)\n    624 def open_dataset(  # type: ignore[override]  # allow LSP violation, not supporting **kwargs\n    625     self,\n    626     filename_or_obj: str | os.PathLike[Any] | BufferedIOBase | AbstractDataStore,\n   (...)\n    642     autoclose=False,\n    643 ) -&gt; Dataset:\n    644     filename_or_obj = _normalize_path(filename_or_obj)\n--&gt; 645     store = NetCDF4DataStore.open(\n    646         filename_or_obj,\n    647         mode=mode,\n    648         format=format,\n    649         group=group,\n    650         clobber=clobber,\n    651         diskless=diskless,\n    652         persist=persist,\n    653         lock=lock,\n    654         autoclose=autoclose,\n    655     )\n    657     store_entrypoint = StoreBackendEntrypoint()\n    658     with close_on_error(store):\n\nFile c:\\Users\\hafez\\miniconda3\\Lib\\site-packages\\xarray\\backends\\netCDF4_.py:381, in NetCDF4DataStore.open(cls, filename, mode, format, group, clobber, diskless, persist, lock, lock_maker, autoclose)\n    378     filename = os.fspath(filename)\n    380 if not isinstance(filename, str):\n--&gt; 381     raise ValueError(\n    382         \"can only read bytes or file-like objects \"\n    383         \"with engine='scipy' or 'h5netcdf'\"\n    384     )\n    386 if format is None:\n    387     format = \"NETCDF4\"\n\nValueError: can only read bytes or file-like objects with engine='scipy' or 'h5netcdf'\n\n\n\n\ndataset = xr.open_dataset(paths[0])\ndataset\n\n\n---------------------------------------------------------------------------\nKeyError                                  Traceback (most recent call last)\nFile c:\\Users\\hafez\\miniconda3\\Lib\\site-packages\\xarray\\backends\\file_manager.py:211, in CachingFileManager._acquire_with_cache_info(self, needs_lock)\n    210 try:\n--&gt; 211     file = self._cache[self._key]\n    212 except KeyError:\n\nFile c:\\Users\\hafez\\miniconda3\\Lib\\site-packages\\xarray\\backends\\lru_cache.py:56, in LRUCache.__getitem__(self, key)\n     55 with self._lock:\n---&gt; 56     value = self._cache[key]\n     57     self._cache.move_to_end(key)\n\nKeyError: [&lt;class 'h5netcdf.core.File'&gt;, (&lt;File-like object HTTPFileSystem, https://oceandata.sci.gsfc.nasa.gov/cmr/getfile/S3A_OLCI_EFRNT.20210703T162305.L2.OC.nc&gt;,), 'r', (('decode_vlen_strings', True), ('driver', None), ('invalid_netcdf', None)), 'd5f858e9-e7aa-41a3-a406-35d327c30633']\n\nDuring handling of the above exception, another exception occurred:\n\nValueError                                Traceback (most recent call last)\nCell In[13], line 1\n----&gt; 1 dataset = xr.open_dataset(paths[0])\n      2 dataset\n\nFile c:\\Users\\hafez\\miniconda3\\Lib\\site-packages\\xarray\\backends\\api.py:571, in open_dataset(filename_or_obj, engine, chunks, cache, decode_cf, mask_and_scale, decode_times, decode_timedelta, use_cftime, concat_characters, decode_coords, drop_variables, inline_array, chunked_array_type, from_array_kwargs, backend_kwargs, **kwargs)\n    559 decoders = _resolve_decoders_kwargs(\n    560     decode_cf,\n    561     open_backend_dataset_parameters=backend.open_dataset_parameters,\n   (...)\n    567     decode_coords=decode_coords,\n    568 )\n    570 overwrite_encoded_chunks = kwargs.pop(\"overwrite_encoded_chunks\", None)\n--&gt; 571 backend_ds = backend.open_dataset(\n    572     filename_or_obj,\n    573     drop_variables=drop_variables,\n    574     **decoders,\n    575     **kwargs,\n    576 )\n    577 ds = _dataset_from_backend_dataset(\n    578     backend_ds,\n    579     filename_or_obj,\n   (...)\n    589     **kwargs,\n    590 )\n    591 return ds\n\nFile c:\\Users\\hafez\\miniconda3\\Lib\\site-packages\\xarray\\backends\\h5netcdf_.py:404, in H5netcdfBackendEntrypoint.open_dataset(self, filename_or_obj, mask_and_scale, decode_times, concat_characters, decode_coords, drop_variables, use_cftime, decode_timedelta, format, group, lock, invalid_netcdf, phony_dims, decode_vlen_strings, driver, driver_kwds)\n    383 def open_dataset(  # type: ignore[override]  # allow LSP violation, not supporting **kwargs\n    384     self,\n    385     filename_or_obj: str | os.PathLike[Any] | BufferedIOBase | AbstractDataStore,\n   (...)\n    401     driver_kwds=None,\n    402 ) -&gt; Dataset:\n    403     filename_or_obj = _normalize_path(filename_or_obj)\n--&gt; 404     store = H5NetCDFStore.open(\n    405         filename_or_obj,\n    406         format=format,\n    407         group=group,\n    408         lock=lock,\n    409         invalid_netcdf=invalid_netcdf,\n    410         phony_dims=phony_dims,\n    411         decode_vlen_strings=decode_vlen_strings,\n    412         driver=driver,\n    413         driver_kwds=driver_kwds,\n    414     )\n    416     store_entrypoint = StoreBackendEntrypoint()\n    418     ds = store_entrypoint.open_dataset(\n    419         store,\n    420         mask_and_scale=mask_and_scale,\n   (...)\n    426         decode_timedelta=decode_timedelta,\n    427     )\n\nFile c:\\Users\\hafez\\miniconda3\\Lib\\site-packages\\xarray\\backends\\h5netcdf_.py:184, in H5NetCDFStore.open(cls, filename, mode, format, group, lock, autoclose, invalid_netcdf, phony_dims, decode_vlen_strings, driver, driver_kwds)\n    181         lock = combine_locks([HDF5_LOCK, get_write_lock(filename)])\n    183 manager = CachingFileManager(h5netcdf.File, filename, mode=mode, kwargs=kwargs)\n--&gt; 184 return cls(manager, group=group, mode=mode, lock=lock, autoclose=autoclose)\n\nFile c:\\Users\\hafez\\miniconda3\\Lib\\site-packages\\xarray\\backends\\h5netcdf_.py:130, in H5NetCDFStore.__init__(self, manager, group, mode, lock, autoclose)\n    127 self.format = None\n    128 # todo: utilizing find_root_and_group seems a bit clunky\n    129 #  making filename available on h5netcdf.Group seems better\n--&gt; 130 self._filename = find_root_and_group(self.ds)[0].filename\n    131 self.is_remote = is_remote_uri(self._filename)\n    132 self.lock = ensure_lock(lock)\n\nFile c:\\Users\\hafez\\miniconda3\\Lib\\site-packages\\xarray\\backends\\h5netcdf_.py:195, in H5NetCDFStore.ds(self)\n    193 @property\n    194 def ds(self):\n--&gt; 195     return self._acquire()\n\nFile c:\\Users\\hafez\\miniconda3\\Lib\\site-packages\\xarray\\backends\\h5netcdf_.py:187, in H5NetCDFStore._acquire(self, needs_lock)\n    186 def _acquire(self, needs_lock=True):\n--&gt; 187     with self._manager.acquire_context(needs_lock) as root:\n    188         ds = _nc4_require_group(\n    189             root, self._group, self._mode, create_group=_h5netcdf_create_group\n    190         )\n    191     return ds\n\nFile c:\\Users\\hafez\\miniconda3\\Lib\\contextlib.py:137, in _GeneratorContextManager.__enter__(self)\n    135 del self.args, self.kwds, self.func\n    136 try:\n--&gt; 137     return next(self.gen)\n    138 except StopIteration:\n    139     raise RuntimeError(\"generator didn't yield\") from None\n\nFile c:\\Users\\hafez\\miniconda3\\Lib\\site-packages\\xarray\\backends\\file_manager.py:199, in CachingFileManager.acquire_context(self, needs_lock)\n    196 @contextlib.contextmanager\n    197 def acquire_context(self, needs_lock=True):\n    198     \"\"\"Context manager for acquiring a file.\"\"\"\n--&gt; 199     file, cached = self._acquire_with_cache_info(needs_lock)\n    200     try:\n    201         yield file\n\nFile c:\\Users\\hafez\\miniconda3\\Lib\\site-packages\\xarray\\backends\\file_manager.py:217, in CachingFileManager._acquire_with_cache_info(self, needs_lock)\n    215     kwargs = kwargs.copy()\n    216     kwargs[\"mode\"] = self._mode\n--&gt; 217 file = self._opener(*self._args, **kwargs)\n    218 if self._mode == \"w\":\n    219     # ensure file doesn't get overridden when opened again\n    220     self._mode = \"a\"\n\nFile c:\\Users\\hafez\\miniconda3\\Lib\\site-packages\\h5netcdf\\core.py:1102, in File.__init__(self, path, mode, invalid_netcdf, phony_dims, **kwargs)\n   1100 # This maps keeps track of all HDF5 datasets corresponding to this group.\n   1101 self._all_h5groups = ChainMap(self._h5group)\n-&gt; 1102 super().__init__(self, self._h5path)\n   1103 # get maximum dimension id and count of labeled dimensions\n   1104 if self._writable:\n\nFile c:\\Users\\hafez\\miniconda3\\Lib\\site-packages\\h5netcdf\\core.py:504, in Group.__init__(self, parent, name)\n    501 if self._root._phony_dims_mode is not None:\n    502     phony_dims = Counter()\n--&gt; 504 for k, v in self._h5group.items():\n    505     if isinstance(v, self._root._h5py.Group):\n    506         # add to the groups collection if this is a h5py(d) Group\n    507         # instance\n    508         self._groups.add(k)\n\nFile c:\\Users\\hafez\\miniconda3\\Lib\\site-packages\\h5py\\_hl\\base.py:438, in ItemsViewHDF5.__iter__(self)\n    436 with phil:\n    437     for key in self._mapping:\n--&gt; 438         yield (key, self._mapping.get(key))\n\nFile c:\\Users\\hafez\\miniconda3\\Lib\\site-packages\\h5py\\_hl\\group.py:400, in Group.get(self, name, default, getclass, getlink)\n    398 if not (getclass or getlink):\n    399     try:\n--&gt; 400         return self[name]\n    401     except KeyError:\n    402         return default\n\nFile h5py\\_objects.pyx:54, in h5py._objects.with_phil.wrapper()\n\nFile h5py\\_objects.pyx:55, in h5py._objects.with_phil.wrapper()\n\nFile c:\\Users\\hafez\\miniconda3\\Lib\\site-packages\\h5py\\_hl\\group.py:357, in Group.__getitem__(self, name)\n    355         raise ValueError(\"Invalid HDF5 object reference\")\n    356 elif isinstance(name, (bytes, str)):\n--&gt; 357     oid = h5o.open(self.id, self._e(name), lapl=self._lapl)\n    358 else:\n    359     raise TypeError(\"Accessing a group is done with bytes or str, \"\n    360                     \"not {}\".format(type(name)))\n\nFile h5py\\_objects.pyx:54, in h5py._objects.with_phil.wrapper()\n\nFile h5py\\_objects.pyx:55, in h5py._objects.with_phil.wrapper()\n\nFile h5py\\h5o.pyx:189, in h5py.h5o.open()\n\nFile h5py\\h5fd.pyx:163, in h5py.h5fd.H5FD_fileobj_read()\n\nFile c:\\Users\\hafez\\miniconda3\\Lib\\site-packages\\fsspec\\spec.py:1959, in AbstractBufferedFile.readinto(self, b)\n   1954 \"\"\"mirrors builtin file's readinto method\n   1955 \n   1956 https://docs.python.org/3/library/io.html#io.RawIOBase.readinto\n   1957 \"\"\"\n   1958 out = memoryview(b).cast(\"B\")\n-&gt; 1959 data = self.read(out.nbytes)\n   1960 out[: len(data)] = data\n   1961 return len(data)\n\nFile c:\\Users\\hafez\\miniconda3\\Lib\\site-packages\\fsspec\\spec.py:1941, in AbstractBufferedFile.read(self, length)\n   1938 if length == 0:\n   1939     # don't even bother calling fetch\n   1940     return b\"\"\n-&gt; 1941 out = self.cache._fetch(self.loc, self.loc + length)\n   1943 logger.debug(\n   1944     \"%s read: %i - %i %s\",\n   1945     self,\n   (...)\n   1948     self.cache._log_stats(),\n   1949 )\n   1950 self.loc += len(out)\n\nFile c:\\Users\\hafez\\miniconda3\\Lib\\site-packages\\fsspec\\caching.py:503, in BytesCache._fetch(self, start, end)\n    501 elif end - self.end &gt; self.blocksize:\n    502     self.total_requested_bytes += bend - start\n--&gt; 503     self.cache = self.fetcher(start, bend)\n    504     self.start = start\n    505 else:\n\nFile c:\\Users\\hafez\\miniconda3\\Lib\\site-packages\\fsspec\\asyn.py:118, in sync_wrapper.&lt;locals&gt;.wrapper(*args, **kwargs)\n    115 @functools.wraps(func)\n    116 def wrapper(*args, **kwargs):\n    117     self = obj or args[0]\n--&gt; 118     return sync(self.loop, func, *args, **kwargs)\n\nFile c:\\Users\\hafez\\miniconda3\\Lib\\site-packages\\fsspec\\asyn.py:103, in sync(loop, func, timeout, *args, **kwargs)\n    101     raise FSTimeoutError from return_result\n    102 elif isinstance(return_result, BaseException):\n--&gt; 103     raise return_result\n    104 else:\n    105     return return_result\n\nFile c:\\Users\\hafez\\miniconda3\\Lib\\site-packages\\fsspec\\asyn.py:56, in _runner(event, coro, result, timeout)\n     54     coro = asyncio.wait_for(coro, timeout=timeout)\n     55 try:\n---&gt; 56     result[0] = await coro\n     57 except Exception as ex:\n     58     result[0] = ex\n\nFile c:\\Users\\hafez\\miniconda3\\Lib\\site-packages\\fsspec\\implementations\\http.py:669, in HTTPFile.async_fetch_range(self, start, end)\n    667     out = await r.read()\n    668 elif start &gt; 0:\n--&gt; 669     raise ValueError(\n    670         \"The HTTP server doesn't appear to support range requests. \"\n    671         \"Only reading this file from the beginning is supported. \"\n    672         \"Open with block_size=0 for a streaming file interface.\"\n    673     )\n    674 else:\n    675     # Response is not a range, but we want the start of the file,\n    676     # so we can read the required amount anyway.\n    677     cl = 0\n\nValueError: The HTTP server doesn't appear to support range requests. Only reading this file from the beginning is supported. Open with block_size=0 for a streaming file interface."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "blog",
    "section": "",
    "text": "Posts\n\n\nExplore various topics and tutorials\n\n\n\n\n\n\n\n\n\n\n\n\n\nGeoscience Analysis with R\n\n\ngeoscience\nanalysis\nR\n\n\n\n\n\n\n\n\nApr 29, 2025\n\n\nHafez Ahmad\n\n\n\n\n\n\n\n\n\n\nAnalysis of Argo Float Data\n\n\ncode\nanalysis\n\n\n\n\n\n\n\n\nOct 16, 2022\n\n\nHafez Ahmad\n\n\n\n\n\n\n\n\n\n\nBasic R\n\n\ncode\nanalysis\n\n\n\n\n\n\n\n\nOct 16, 2022\n\n\nHafez Ahmad\n\n\n\n\n\n\n\n\n\n\nEcological modeling\n\n\nnews\ncode\nanalysis\n\n\n\n\n\n\n\n\nOct 16, 2022\n\n\nHafez Ahmad\n\n\n\n\n\n\n\n\n\n\nEcological data analysis with R\n\n\nnews\ncode\nanalysis\n\n\n\n\n\n\n\n\nOct 16, 2022\n\n\nHafez Ahmad\n\n\n\n\n\n\n\n\n\n\nHow to Make Dynamic Maps with python\n\n\nnews\ncode\nanalysis\n\n\n\n\n\n\n\n\nOct 16, 2022\n\n\nHafez Ahmad\n\n\n\n\n\n\n\n\n\n\nMachine learning with Environmental data\n\n\nMachine learning\ncode\nanalysis\n\n\n\n\n\n\n\n\nOct 16, 2022\n\n\nHafez Ahmad\n\n\n\n\n\n\n\n\n\n\nMaking temperature-salinity diagrams\n\n\nTS diagram\ncode\nanalysis\n\n\n\n\n\n\n\n\nOct 16, 2022\n\n\nHafez Ahmad\n\n\n\n\n\n\n\n\n\n\nMultivariate Statistics\n\n\nMultivariate\ncode\nanalysis\n\n\n\n\n\n\n\n\nOct 16, 2022\n\n\nHafez Ahmad\n\n\n\n\n\n\n\n\n\n\nPopular R packages used in Oceanography, Fisheries and environmental science\n\n\nnews\ncode\nanalysis\n\n\n\n\n\n\n\n\nOct 16, 2022\n\n\nHafez Ahmad\n\n\n\n\n\n\n\n\n\n\nPosts in Medium and Other Platforms\n\n\nnews\ncode\nanalysis\n\n\n\n\n\n\n\n\nOct 16, 2022\n\n\nHafez Ahmad\n\n\n\n\n\n\n\n\n\n\nPractical Ecological data analysis\n\n\nEcology\ncode\nanalysis\n\n\n\n\n\n\n\n\nOct 16, 2022\n\n\nHafez Ahmad\n\n\n\n\n\n\n\n\n\n\nImportance of Remote Sensing in Protecting Local Economies and Environments\n\n\nRemote sensing\nEnvironment\nAI\n\n\n\n\n\n\n\n\nOct 16, 2022\n\n\nHafez Ahmad\n\n\n\n\n\n\n\n\n\n\nSpecies distribution modeling\n\n\nSpecies distribution\ncode\nanalysis\n\n\n\n\n\n\n\n\nOct 16, 2022\n\n\nHafez Ahmad\n\n\n\n\n\n\n\n\n\n\nBasic R\n\n\nnews\ncode\nanalysis\n\n\n\n\n\n\n\n\nOct 16, 2022\n\n\nHafez Ahmad\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About me",
    "section": "",
    "text": "Hi, I’m Hafez Ahmad\nPersonal Website for Regular Writing, Training,and Teaching\nExperienced in Project Management,Observational Oceanography,Marine Community Ecology, Geoinformatics, Wildlife habitat management, Hydrology and Remote Sensing,Strategic Planning, and Data Analysis , and problem solving with automation (Python, R, MATLAB, Julia, Google Earth Engine, ArcGIS, Adobe Illustrator, Excel).I am passionate about physical Oceanographic ,Marine Ecology, Aquatic wild habitats ,coastal Development Research and Machine learning . I will be happy to be part of your Research Groups.I have a Bachelor’s Degree in Oceanography from the Faculty of Marine Science and Fisheries, University of Chittagong ,Bangladesh and I was also an Exchange student at Florida Gulf Coast University, Florida, USAI am currently Graduate student at Mississippi State University,Mississippi, USA. More information about my Research and Activities can be found at Education section."
  },
  {
    "objectID": "about.html#current-role",
    "href": "about.html#current-role",
    "title": "About me",
    "section": "Current Role",
    "text": "Current Role\nGeosystems Research Institute (2024-2027) Graduate Research Assistant\nFocus on leveraging cutting-edge remote sensing technologies and hydrodynamic modeling to contribute to surface-to-ground water quality assessment in the dynamic environment of the Mississippi Coastal region. Skilled in harnessing data from satellite sensors and drone imagery to derive meaningful insights into environmental changes. Adept at developing and implementing algorithms to process large datasets, enabling accurate analysis and interpretation of water quality parameters. Project"
  },
  {
    "objectID": "about.html#previous-roles",
    "href": "about.html#previous-roles",
    "title": "About me",
    "section": "Previous Roles",
    "text": "Previous Roles\nMississippi USGS Cooperative Fish and Wildlife Research Unit (2022-2023) Graduate Research Assistant\nProject\nResearch Internship (2022) Mississippi State University (MSU), Geosystems Research Institute (GRI), and United States Department of Agriculture (USDA)\nSuccessfully completed a two-month research internship. Project\nWildlife Conservation Society (WCS) Bangladesh Program (Oct 2020 - Nov 2021) Marine Data Management Officer\nWCS is a non-governmental organization headquartered at the Bronx Zoo in New York City, aiming to conserve the world’s largest wild places. WCS Bangladesh conducts cutting-edge wildlife science and shares new knowledge with local communities and government agencies through innovative outreach.\n\nResponsibilities\n\n\n\n\n\n\n\nTask\nDescription\n\n\n\n\nEntered data, quality check, summarized, GPX data extraction\nGenerated descriptive statistics for WCS BD marine databases in Excel and other software programs according to a standardized format.\n\n\nAssisted with advanced data analysis and modeling\nGenerated maps and graphs for reports and presentations.\n\n\nMarine Spatial Monitoring and Reporting Tool development\nFocused on the Bay of Bengal region: SMART.\n\n\nEnsured secure data storage and support documentation\nMaintained data integrity and accessibility.\n\n\nDeveloped Sharks and Rays ID guide\nCreated Standard Working Procedure for Data Collection.\n\n\nAssisted with improving data collection, data entry, and image processing protocols\nDeveloped new data analysis tools.\n\n\nCompiled and reviewed secondary information\nDeveloped MPA management plans, species assessments, and marine spatial plans.\n\n\nProvided support to the Marine Conservation Team\nAssisted other WCS BD programs as necessary.\n\n\n\nGeosystems Research Institute (May 2023 - August 2023)\nJoined an elite group of eight students from different academic backgrounds and universities across the United States to work with a High-Performance Computer (aka Supercomputer) for cutting-edge machine learning projects. This incredible opportunity allowed us to tap into the immense power of supercomputers and foster collaboration and innovation among bright minds from diverse fields. Together, we pushed the boundaries of computing and drove groundbreaking advancements in our respective areas of expertise.\nMy project focused on classifying cattle behavior using machine and deep learning techniques with the aid of High-Performance Computing facilities. Project link\n\n\n\nSummer HPC 2023"
  },
  {
    "objectID": "about.html#professional-membership",
    "href": "about.html#professional-membership",
    "title": "About me",
    "section": "Professional Membership",
    "text": "Professional Membership\n\nThe Oceanography Society (Student member)\nAmerican Fisheries Society Mississippi State Sub-unit (Secretary-2022)\nIEEE Student Membership\nBlue Green Foundation Bangladesh (Founding member)\nWildlife Conservation Society, Bangladesh"
  },
  {
    "objectID": "about.html#field-work-in-the-keys-marine-laboratory-florida-usa",
    "href": "about.html#field-work-in-the-keys-marine-laboratory-florida-usa",
    "title": "About me",
    "section": "Field Work in the Keys Marine Laboratory, Florida, USA",
    "text": "Field Work in the Keys Marine Laboratory, Florida, USA\n\n\n\nField Work in the Keys Marine Laboratory\n\n\nThe Keys Marine Laboratory (KML) is a full-service marine field station situated in the heart of the Florida Keys. I spent three days there conducting fieldwork, lab work, and research under the supervision of Dr. Douglass. We dived into the Gulf of Mexico and the Atlantic Ocean, identifying seagrass, marine fishes, and coral reef species."
  },
  {
    "objectID": "about.html#working-in-the-marine-ecology-lab",
    "href": "about.html#working-in-the-marine-ecology-lab",
    "title": "About me",
    "section": "Working in the Marine Ecology Lab",
    "text": "Working in the Marine Ecology Lab\nThis is Dr. Douglass’s Ecological Lab. I spent about 86 hours in the Fall 2019 semester working on benthic samples and sorting with four graduate students from Florida Gulf Coast University.\n\n\n\nMarine Ecology Lab Work"
  },
  {
    "objectID": "about.html#leadership-program",
    "href": "about.html#leadership-program",
    "title": "About me",
    "section": "Leadership Program",
    "text": "Leadership Program\nThe Social Leadership Hackathon is a half-day workshop where students from diverse backgrounds come together to learn and exercise leadership to solve a problem in their community. Participants work in small groups to focus on a particular local problem and create an action plan to solve it.\n\n\n\nLeadership Program"
  },
  {
    "objectID": "about.html#atlantic-ocean",
    "href": "about.html#atlantic-ocean",
    "title": "About me",
    "section": "Atlantic Ocean",
    "text": "Atlantic Ocean\nI love the ocean and its weather. I had the opportunity to dive into the Atlantic Ocean.\n\n\n\nAtlantic Ocean"
  },
  {
    "objectID": "cv/index.html",
    "href": "cv/index.html",
    "title": "CV",
    "section": "",
    "text": "Curriculum Vitae\n\n\nUpdated CV\nYou can now view or download my updated CV using the links below:\nView CV Online\nDownload CV (PDF)"
  },
  {
    "objectID": "news/index.html",
    "href": "news/index.html",
    "title": "News",
    "section": "",
    "text": "New Project Launched: We are excited to announce the launch of a new project on “Integrated Coastal Water Monitoring and Modeling.”\n\n\n\n\n\nNew Blog Post: Check out our latest blog post on “How to Make Dynamic Maps with Python.”\n\n\n\n\n\nNew Research Published: Our latest research on Ocean optics modeling has been published in the Journal of Environmental earth sciences.\nUpcoming Workshop: Join us for a workshop on “Dynamic Mapping with Python” on May 15, 2025.\nPhD Milestone: I am thrilled to announce that I have passed my PhD candidacy exam and am now officially a PhD candidate!\n\n\n\n\n\nWebsite Update: The blog has been updated with new posts on PCA and Machine Learning in Oceanography.\n\n\n\n\n\nConference Update: My Conference abstract has been accepted in ASLO conference, North Carolina, USA\n\n\n\n\n\nEducation Update: I have started my PhD at Mississippi State University\n\n\n\n\n\nEducation Update: I have started my MS at Mississippi State University"
  },
  {
    "objectID": "news/index.html#april-30-2025",
    "href": "news/index.html#april-30-2025",
    "title": "News",
    "section": "",
    "text": "New Project Launched: We are excited to announce the launch of a new project on “Integrated Coastal Water Monitoring and Modeling.”"
  },
  {
    "objectID": "news/index.html#april-25-2025",
    "href": "news/index.html#april-25-2025",
    "title": "News",
    "section": "",
    "text": "New Blog Post: Check out our latest blog post on “How to Make Dynamic Maps with Python.”"
  },
  {
    "objectID": "news/index.html#april-26-2025",
    "href": "news/index.html#april-26-2025",
    "title": "News",
    "section": "",
    "text": "New Research Published: Our latest research on Ocean optics modeling has been published in the Journal of Environmental earth sciences.\nUpcoming Workshop: Join us for a workshop on “Dynamic Mapping with Python” on May 15, 2025.\nPhD Milestone: I am thrilled to announce that I have passed my PhD candidacy exam and am now officially a PhD candidate!"
  },
  {
    "objectID": "news/index.html#april-20-2025",
    "href": "news/index.html#april-20-2025",
    "title": "News",
    "section": "",
    "text": "Website Update: The blog has been updated with new posts on PCA and Machine Learning in Oceanography."
  },
  {
    "objectID": "news/index.html#april-20-2024",
    "href": "news/index.html#april-20-2024",
    "title": "News",
    "section": "",
    "text": "Conference Update: My Conference abstract has been accepted in ASLO conference, North Carolina, USA"
  },
  {
    "objectID": "news/index.html#january-01-2024",
    "href": "news/index.html#january-01-2024",
    "title": "News",
    "section": "",
    "text": "Education Update: I have started my PhD at Mississippi State University"
  },
  {
    "objectID": "news/index.html#january-01-2022",
    "href": "news/index.html#january-01-2022",
    "title": "News",
    "section": "",
    "text": "Education Update: I have started my MS at Mississippi State University"
  },
  {
    "objectID": "Notebook/index.html",
    "href": "Notebook/index.html",
    "title": "Notebook",
    "section": "",
    "text": "Welcome to the Notebook section! This is where you can find various notes, tutorials, and resources related to my work and interests.\n\n\n\nWhale Detection: Demonstrates whale detection using machine learning techniques.\nWater Analysis with Google Earth Engine: Resources and examples for using Google Earth Engine for water-related analysis.\nEarth Access: A notebook exploring Earth data access and analysis.\nPrimer v7 to R Code: A guide for converting Primer v7 outputs to R code for further analysis.\nPython Data Analysis and Visualization: Examples and tutorials for data analysis and visualization using Python.\n\n\n\nTo add a new notebook, include the file (either .html or .ipynb) in this directory and update the list above with a heading and a brief description."
  },
  {
    "objectID": "Notebook/index.html#available-notebooks",
    "href": "Notebook/index.html#available-notebooks",
    "title": "Notebook",
    "section": "",
    "text": "Whale Detection: Demonstrates whale detection using machine learning techniques.\nWater Analysis with Google Earth Engine: Resources and examples for using Google Earth Engine for water-related analysis.\nEarth Access: A notebook exploring Earth data access and analysis.\nPrimer v7 to R Code: A guide for converting Primer v7 outputs to R code for further analysis.\nPython Data Analysis and Visualization: Examples and tutorials for data analysis and visualization using Python.\n\n\n\nTo add a new notebook, include the file (either .html or .ipynb) in this directory and update the list above with a heading and a brief description."
  },
  {
    "objectID": "posts/Basic R/index.html",
    "href": "posts/Basic R/index.html",
    "title": "Basic R",
    "section": "",
    "text": "You will find basic R codes\n\nwildtype&lt;- c(103,1125,504,608,794,698,920,535,842,765,945,1005,724,498,727)\nprint(wildtype)\n\n [1]  103 1125  504  608  794  698  920  535  842  765  945 1005  724  498  727\n\n\n#2. Create variable called “resistant”—-\n\nresistant&lt;- c(768, 230, 854 ,637,426, 482, 1118, 524, 604 ,730 ,17 ,421, 587, 782 ,171)\nprint(resistant)\n\n [1]  768  230  854  637  426  482 1118  524  604  730   17  421  587  782  171\n\n\n#3. combine the the vectors into data frame called “miner”—-\n\nminer&lt;- data.frame(\"wild\"=wildtype,\"resist\"=resistant)\nprint(miner)\n\n   wild resist\n1   103    768\n2  1125    230\n3   504    854\n4   608    637\n5   794    426\n6   698    482\n7   920   1118\n8   535    524\n9   842    604\n10  765    730\n11  945     17\n12 1005    421\n13  724    587\n14  498    782\n15  727    171\n\n\n#4. Calculate the mean and variance of the wildtype and resistant from the data frame “miner”—-\n\nprint(paste0(\"The mean of wildtype is \",round(x=mean(miner$wild),digits=3),\" and the variance is \",round(x=var(miner$wild),digits=3)))\n\n[1] \"The mean of wildtype is 719.533 and the variance is 63014.552\"\n\n\n\nprint(paste0(\"The mean of resistant is \",round(x=mean(miner$resist),digits=3),\" and the variance is \",round(x=var(miner$resist),digits=3)))\n\n[1] \"The mean of resistant is 556.733 and the variance is 80529.21\"\n\n\n\n5. write a function for standard error called “stderror”—-\nformula for standard error is standard deviation/square root ($ {(n)}$) of sample size\n\nstderror&lt;- function(x,n=length(x)){\n  return(sd(x)/sqrt(n))\n}\n\n#…apply the function to the data frame “miner”—-\n\nprint(paste0(\"The standard error of wildtype is \",round(x=stderror(miner$wild),digits=3)))\n\n[1] \"The standard error of wildtype is 64.815\"\n\n\n\nprint(paste0(\"The standard error of resistant is \",round(x=stderror(miner$resist),digits=3)))\n\n[1] \"The standard error of resistant is 73.271\"\n\n\n#6. write a function for growth rate called “rate” —-\nwhere, nt is the vector abunace at t,ntplus the vector of abunance at year t+1 and t for vector of years and return plot for growth rate … load data from laptop\n\nabundance &lt;- read.csv(\"E:/1 Master's/MSU/course classes/Fall 2022/WFA 8134 RMethod/code/abundance.csv\",header = TRUE)\nhead(abundance)\n\n  year abundance nextabundance\n1    1        10           215\n2    2       215           105\n3    3       105           277\n4    4       277            44\n5    5        44            34\n6    6        34            44\n\n\n#… write that functions\n\nrate&lt;- function(dataframe){\n    nt&lt;- dataframe$abundance # abundance at t\n    ntplus&lt;- dataframe$nextabundance # abundance at t+1\n    t&lt;- dataframe$year # vector of years\n    growthrate&lt;- log(ntplus/nt) # growth rate\n    plot(t,growthrate,type=\"l\",xlab=\"Year\",ylab=\"Growth rate\",main=\"Growth rate of abundance\")\n    return(growthrate)\n}\n\n#… apply it over the dataframe\n\nrate(abundance)\n\n [1]  3.068052935 -0.716677678  0.970057156 -1.839827872 -0.257829109\n [6]  0.257829109  2.087928156  0.514761530 -1.068759326 -0.807260487\n[11]  0.836248024  0.762140052 -0.179658439  0.644091024 -0.073893126\n[16] -0.055655784 -0.024136329 -0.048383081  0.196466064  0.061285342\n[21] -0.114650563  0.110679677  0.027470661  0.053999307  0.082109406\n[26]  0.239229689 -0.429692403  0.038749003 -0.059396674  0.336869535\n[31]  0.179503953 -0.049329729 -0.224888752 -0.071256817 -0.135375329\n[36] -0.106106506 -0.007490672  0.151784833  0.033039854  0.103233255\n[41]  0.130850237  0.085278918 -0.016483890 -0.231721325  0.105942418\n[46]  0.010416761  0.114438358  0.050461155 -0.005286356 -0.084765267\n\n\n\n\n\n\n\n\nFigure 1: Calculated Growth rate of abundance dataframe using following formula\\(r=ln(Nt+1)/Nt\\).\n\n\n\n\n\n\ngit commit -m “comments”\ngit add .\ngit push -f origin master"
  },
  {
    "objectID": "posts/Geoscience Analysis/index.html",
    "href": "posts/Geoscience Analysis/index.html",
    "title": "Geoscience Analysis with R",
    "section": "",
    "text": "This post demonstrates geoscience data analysis using R.\n\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(sf)\n\nLinking to GEOS 3.11.2, GDAL 3.7.2, PROJ 9.3.0; sf_use_s2() is TRUE\n\nlibrary(raster)\n\nWarning: package 'raster' was built under R version 4.3.3\n\n\nLoading required package: sp\n\n\nWarning: package 'sp' was built under R version 4.3.3\n\n# Load a sample shapefile (replace with your own geospatial data)\nshapefile_path &lt;- system.file(\"shape/nc.shp\", package = \"sf\")\ngeo_data &lt;- st_read(shapefile_path)\n\nReading layer `nc' from data source \n  `C:\\Users\\hafez\\AppData\\Local\\R\\win-library\\4.3\\sf\\shape\\nc.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 100 features and 14 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -84.32385 ymin: 33.88199 xmax: -75.45698 ymax: 36.58965\nGeodetic CRS:  NAD27\n\n# Plot the geospatial data\nplot(geo_data[\"AREA\"], main = \"Geospatial Data Visualization\")\n\n\n\n\n\n\n\n# Load a sample raster dataset (replace with your own raster data)\nraster_data &lt;- raster(system.file(\"external/test.grd\", package = \"raster\"))\n\n# Plot the raster data\nplot(raster_data, main = \"Raster Data Visualization\")\n\n\n\n\n\n\n\n# Perform a simple spatial operation: calculate the centroid of polygons\ncentroids &lt;- st_centroid(geo_data)\n\nWarning: st_centroid assumes attributes are constant over geometries\n\n# Add centroids to the plot\nplot(geo_data[\"AREA\"], main = \"Geospatial Data with Centroids\")\nplot(centroids, add = TRUE, col = \"red\", pch = 16)\n\nWarning in plot.sf(centroids, add = TRUE, col = \"red\", pch = 16): ignoring all\nbut the first attribute"
  },
  {
    "objectID": "posts/How to Make Dynamic Maps with python/index.html",
    "href": "posts/How to Make Dynamic Maps with python/index.html",
    "title": "How to Make Dynamic Maps with python",
    "section": "",
    "text": "You will find basic R codes\n\n1+2\n\n[1] 3"
  },
  {
    "objectID": "posts/Machine learning/index.html",
    "href": "posts/Machine learning/index.html",
    "title": "Machine learning",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/Multidimentional data analysis/index.html",
    "href": "posts/Multidimentional data analysis/index.html",
    "title": "Multivariate Statistics",
    "section": "",
    "text": "This post provides a comprehensive overview of multivariate statistical methods frequently used in ecology and marine science. Each method is accompanied by the corresponding R packages for implementation.\n\n1. Principal Component Analysis (PCA)\nPurpose: Reduces data dimensionality and identifies patterns.\nR Packages: - vegan: rda() - stats: prcomp(), princomp() - FactoMineR, factoextra: For enhanced visualization ### Example: Principal Component Analysis (PCA) Principal Component Analysis (PCA) is a multivariate statistical technique that uses an orthogonal transformation to convert a set of correlated variables into a set of orthogonal, uncorrelated axes called principal components. The primary motivation behind PCA is to reduce a large number of variables into a smaller number of derived variables that can be visualized in 2 or 3-dimensional space.\nApplications of PCA include: - Reducing strongly correlated data groups - Evaluating aquatic habitat suitability - Analyzing fish abundance, seasonal and spatial variation - Studying ecosystem organization changes - Investigating intra- and interspecific variability, niche differentiation, and partitioning\n\n# Load necessary library\nlibrary(ggplot2)\n\n# Create a sample dataset\ndata &lt;- data.frame(\n  Variable1 = c(2.5, 0.5, 2.2, 1.9, 3.1, 2.3, 2, 1, 1.5, 1.1),\n  Variable2 = c(2.4, 0.7, 2.9, 2.2, 3.0, 2.7, 1.6, 1.1, 1.6, 0.9)\n)\n\n# Perform PCA\npca_result &lt;- prcomp(data, scale. = TRUE)\n\n# Print PCA summary\nsummary(pca_result)\n\nImportance of components:\n                         PC1     PC2\nStandard deviation     1.388 0.27216\nProportion of Variance 0.963 0.03704\nCumulative Proportion  0.963 1.00000\n\n# Plot PCA\nbiplot(pca_result, main = \"PCA Biplot\")\n\n\n\n\n\n\n\n\n\n\n2. Non-metric Multidimensional Scaling (NMDS)\nPurpose: Ordination based on ranks (non-parametric).\nR Package: - vegan: metaMDS()\n\n\nApplications of Non-metric Multidimensional Scaling (NMDS)\nNMDS is widely used in ecological and environmental studies to visualize the similarity or dissimilarity of data points in a low-dimensional space. Applications include: - Analyzing community composition and structure - Studying species-environment relationships - Visualizing temporal changes in ecological data - Comparing biodiversity across sites\n\nlibrary(vegan)\n\nWarning: package 'vegan' was built under R version 4.3.3\n\n\nLoading required package: permute\n\n\nWarning: package 'permute' was built under R version 4.3.3\n\n\nLoading required package: lattice\n\ndata(dune)\nnmds &lt;- metaMDS(dune)\n\nRun 0 stress 0.1192678 \nRun 1 stress 0.1192679 \n... Procrustes: rmse 0.0001218127  max resid 0.0003736083 \n... Similar to previous best\nRun 2 stress 0.1192678 \n... New best solution\n... Procrustes: rmse 7.269566e-06  max resid 2.137083e-05 \n... Similar to previous best\nRun 3 stress 0.1192678 \n... Procrustes: rmse 4.629212e-05  max resid 0.0001436214 \n... Similar to previous best\nRun 4 stress 0.2035424 \nRun 5 stress 0.1192679 \n... Procrustes: rmse 9.770457e-05  max resid 0.0002999795 \n... Similar to previous best\nRun 6 stress 0.1192679 \n... Procrustes: rmse 0.0001655233  max resid 0.0005082011 \n... Similar to previous best\nRun 7 stress 0.1192679 \n... Procrustes: rmse 0.000153753  max resid 0.0004721524 \n... Similar to previous best\nRun 8 stress 0.1192678 \n... Procrustes: rmse 4.858184e-05  max resid 0.0001484307 \n... Similar to previous best\nRun 9 stress 0.1192678 \n... Procrustes: rmse 6.195451e-05  max resid 0.0001903387 \n... Similar to previous best\nRun 10 stress 0.1809581 \nRun 11 stress 0.1808911 \nRun 12 stress 0.1192678 \n... Procrustes: rmse 1.237881e-05  max resid 3.616359e-05 \n... Similar to previous best\nRun 13 stress 0.1192678 \n... Procrustes: rmse 6.937557e-06  max resid 1.78123e-05 \n... Similar to previous best\nRun 14 stress 0.1183186 \n... New best solution\n... Procrustes: rmse 0.02027193  max resid 0.06497369 \nRun 15 stress 0.1808911 \nRun 16 stress 0.1192679 \nRun 17 stress 0.1183186 \n... New best solution\n... Procrustes: rmse 1.364961e-05  max resid 4.380806e-05 \n... Similar to previous best\nRun 18 stress 0.1192679 \nRun 19 stress 0.1183186 \n... Procrustes: rmse 5.076165e-06  max resid 1.40165e-05 \n... Similar to previous best\nRun 20 stress 0.1886532 \n*** Best solution repeated 2 times\n\nplot(nmds)\n\n\n\n\n\n\n\n\n\n\n3. Canonical Correspondence Analysis (CCA)\nPurpose: Ordination constrained by environmental variables.\n\n\nApplications of Canonical Correspondence Analysis (CCA)\nCCA is commonly applied in ecological research to explore relationships between species and environmental variables. Applications include: - Identifying key environmental drivers of species distribution - Analyzing community-environment interactions - Studying habitat preferences of species\n\ndata(dune.env)\ncca_model &lt;- cca(dune ~ ., data = dune.env)\n\n\nSome constraints or conditions were aliased because they were redundant. This\ncan happen if terms are linearly dependent (collinear): 'Manure^4'\n\nplot(cca_model)\n\n\n\n\n\n\n\n\n\n\n4. Redundancy Analysis (RDA)\nPurpose: Linear constrained ordination.\n\n\nApplications of Redundancy Analysis (RDA)\nRDA is used to summarize and visualize the variation in response variables explained by explanatory variables. Applications include: - Investigating the influence of environmental factors on species abundance - Analyzing multivariate ecological datasets - Studying the effects of land use on biodiversity\n\nrda_model &lt;- rda(dune ~ ., data = dune.env)\n\n\nSome constraints or conditions were aliased because they were redundant. This\ncan happen if terms are linearly dependent (collinear): 'Manure^4'\n\nplot(rda_model)\n\n\n\n\n\n\n\n\n\n\n5. Cluster Analysis\nPurpose: Groups similar observations.\nR Packages: - stats: hclust(), kmeans() - cluster: agnes(), diana()\n\n\nApplications of Cluster Analysis\nCluster analysis is a versatile tool for grouping similar observations. Applications include: - Classifying vegetation types - Grouping sampling sites based on species composition - Identifying patterns in genetic or molecular data\n\ndist_matrix &lt;- dist(scale(dune))\nhc &lt;- hclust(dist_matrix)\nplot(hc)\n\n\n\n\n\n\n\n\n\n\n6. Discriminant Analysis (LDA/QDA)\nPurpose: Classify observations into predefined groups.\nR Package: - MASS\n\n\nApplications of Discriminant Analysis (LDA/QDA)\nDiscriminant analysis is used for classification and prediction. Applications include: - Classifying species based on morphological traits - Predicting habitat types from environmental variables - Identifying key variables that differentiate groups\n\nlibrary(MASS)\n# Example assumes 'Species' is a factor in iris\nlda_model &lt;- lda(Species ~ ., data = iris)\nplot(lda_model)\n\n\n\n\n\n\n\n\n\n\n7. PERMANOVA\nPurpose: Permutation-based multivariate ANOVA.\nR Package: - vegan: adonis(), adonis2()\n\n\nApplications of PERMANOVA\nPERMANOVA is a robust method for testing differences in multivariate data. Applications include: - Comparing community composition across treatments - Testing the effects of environmental gradients on species assemblages - Analyzing experimental data with complex designs\n\nadonis_model &lt;- adonis(dune ~ Management, data = dune.env)\n\nWarning: 'adonis' is deprecated.\nUse 'adonis2' instead.\nSee help(\"Deprecated\") and help(\"vegan-deprecated\").\n\nadonis_model\n\n$aov.tab\nPermutation: free\nNumber of permutations: 999\n\nTerms added sequentially (first to last)\n\n           Df SumsOfSqs MeanSqs F.Model      R2 Pr(&gt;F)   \nManagement  3    1.4686 0.48953  2.7672 0.34161  0.004 **\nResiduals  16    2.8304 0.17690         0.65839          \nTotal      19    4.2990                 1.00000          \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n$call\nadonis(formula = dune ~ Management, data = dune.env)\n\n$coefficients\n              Achimill   Agrostol   Airaprae   Alopgeni  Anthodor   Bellpere\n(Intercept)  1.0083333  2.0583333  0.2083333  1.6500000 1.1166667  0.7666667\nManagement1  1.3250000 -2.0583333 -0.2083333 -0.9833333 0.2166667  0.9000000\nManagement2  0.1916667 -0.6583333 -0.2083333 -0.0500000 0.6833333 -0.3666667\nManagement3 -0.6750000  0.1083333  0.6250000 -1.6500000 0.2166667 -0.4333333\n              Bromhord    Chenalbu    Cirsarve   Comapalu  Eleopalu\n(Intercept)  0.9916667  0.04166667  0.08333333  0.1666667  1.075000\nManagement1  1.6750000 -0.04166667 -0.08333333 -0.1666667 -1.075000\nManagement2 -0.1916667 -0.04166667 -0.08333333 -0.1666667 -0.275000\nManagement3 -0.9916667 -0.04166667 -0.08333333  0.5000000  1.091667\n                 Elymrepe    Empenigr   Hyporadi   Juncarti   Juncbufo\n(Intercept)  1.333333e+00  0.08333333  0.4583333  0.8166667  0.5916667\nManagement1 -5.315636e-16 -0.08333333  0.2083333 -0.8166667 -0.5916667\nManagement2  6.666667e-01 -0.08333333 -0.4583333  0.7833333  0.6083333\nManagement3 -1.333333e+00  0.25000000  0.7083333  0.3500000 -0.5916667\n              Lolipere   Planlanc    Poaprat    Poatriv   Ranuflam   Rumeacet\n(Intercept)  3.3333333  1.4583333  2.6416667  3.2833333  0.6000000  0.8833333\nManagement1  2.6666667  0.5416667  1.3583333  0.3833333 -0.6000000 -0.8833333\nManagement2  0.6666667  1.5416667  0.7583333  1.5166667 -0.2000000  2.3166667\nManagement3 -3.0000000 -0.6250000 -1.9750000 -3.2833333  0.7333333 -0.8833333\n              Sagiproc   Salirepe   Scorautu Trifprat   Trifrepe   Vicilath\n(Intercept)  0.9500000  0.4583333  2.9083333     0.45  2.6583333  0.2916667\nManagement1 -0.2833333 -0.4583333  1.4250000    -0.45  2.0083333  0.7083333\nManagement2 -0.1500000 -0.4583333 -0.1083333     1.35  0.1416667 -0.2916667\nManagement3 -0.4500000  1.3750000  0.2583333    -0.45 -0.8250000 -0.1250000\n              Bracruta   Callcusp\n(Intercept)  2.4083333  0.4166667\nManagement1 -0.4083333 -0.4166667\nManagement2  0.3916667 -0.4166667\nManagement3  0.4250000  0.7500000\n\n$coef.sites\n                      1           2           3           4           5\n(Intercept)  0.67574520  0.53161494  0.50736459  0.53767659  0.54776275\nManagement1 -0.14226615 -0.25339555 -0.05173176 -0.06500654 -0.08533989\nManagement2 -0.05922431 -0.05667973 -0.07145964 -0.05140339 -0.21375164\nManagement3  0.26701574  0.27967840  0.25476356  0.23760571  0.20010780\n                     6          7           8           9          10\n(Intercept)  0.5439066  0.5146877  0.50369055  0.53529312  0.50417436\nManagement1 -0.1173092 -0.1278286  0.03182005  0.02163523 -0.26835736\nManagement2 -0.2009296 -0.2208891 -0.08938326 -0.15314104 -0.08681523\nManagement3  0.1817377  0.2478188  0.12351081  0.21045063  0.21427188\n                     11          12          13          14          15\n(Intercept)  0.54326809  0.61282294  0.62050552  0.71853509  0.68579075\nManagement1 -0.22531013  0.08846914  0.07639056  0.07163204  0.14808648\nManagement2 -0.01457139 -0.06318735 -0.04763974  0.05771058  0.03074555\nManagement3  0.11608592  0.11575703  0.13515185 -0.14997406 -0.17737191\n                     16          17           18          19          20\n(Intercept)  0.71914202  0.76273816  0.597040253  0.71241400  0.71952832\nManagement1  0.16918907 -0.04694525 -0.129723226 -0.02358819  0.16267874\nManagement2  0.02385609 -0.01041765 -0.014764304  0.02718627  0.04425268\nManagement3 -0.04953049 -0.09068176 -0.002636699 -0.13054729 -0.20361567\n\n$f.perms\n             [,1]\n   [1,] 1.4770127\n   [2,] 1.6741268\n   [3,] 0.5841741\n   [4,] 1.0793058\n   [5,] 1.3939571\n   [6,] 0.5312787\n   [7,] 1.2214243\n   [8,] 0.6273901\n   [9,] 0.8102732\n  [10,] 1.4203213\n  [11,] 0.7830450\n  [12,] 0.4712738\n  [13,] 0.7274186\n  [14,] 0.9329011\n  [15,] 0.9334849\n  [16,] 0.4632469\n  [17,] 0.4831136\n  [18,] 1.3909926\n  [19,] 0.6054234\n  [20,] 1.1386544\n  [21,] 0.8940494\n  [22,] 1.2806116\n  [23,] 1.9641093\n  [24,] 0.9741948\n  [25,] 0.6531695\n  [26,] 1.3248005\n  [27,] 1.4124523\n  [28,] 1.3773216\n  [29,] 1.0519740\n  [30,] 1.1525879\n  [31,] 0.8695853\n  [32,] 1.2351863\n  [33,] 0.8724930\n  [34,] 0.6903864\n  [35,] 1.3501681\n  [36,] 1.1824076\n  [37,] 0.7419446\n  [38,] 1.4360489\n  [39,] 1.0690261\n  [40,] 0.9301971\n  [41,] 0.7623953\n  [42,] 1.0511879\n  [43,] 1.1721067\n  [44,] 0.6674446\n  [45,] 1.1962906\n  [46,] 0.7492973\n  [47,] 0.8001220\n  [48,] 1.2280829\n  [49,] 0.2880842\n  [50,] 0.4022638\n  [51,] 0.6737903\n  [52,] 1.1783578\n  [53,] 0.6936991\n  [54,] 1.1631255\n  [55,] 0.6775807\n  [56,] 0.2893694\n  [57,] 0.6653908\n  [58,] 1.4210496\n  [59,] 1.5012472\n  [60,] 0.6638606\n  [61,] 1.3021709\n  [62,] 0.5785438\n  [63,] 1.1420707\n  [64,] 0.7380980\n  [65,] 0.4966893\n  [66,] 0.5924792\n  [67,] 0.9808446\n  [68,] 0.4963282\n  [69,] 0.7565734\n  [70,] 0.9940520\n  [71,] 0.7483531\n  [72,] 1.0850450\n  [73,] 0.9988767\n  [74,] 0.5043698\n  [75,] 0.8972336\n  [76,] 0.7039330\n  [77,] 0.9657978\n  [78,] 1.0284344\n  [79,] 0.7344814\n  [80,] 1.0063138\n  [81,] 1.6712571\n  [82,] 1.0358732\n  [83,] 1.1810227\n  [84,] 2.4980652\n  [85,] 0.9193928\n  [86,] 1.0921393\n  [87,] 1.3260082\n  [88,] 1.2823243\n  [89,] 2.1462794\n  [90,] 0.8752580\n  [91,] 0.7103119\n  [92,] 1.3050155\n  [93,] 0.7557751\n  [94,] 0.5923924\n  [95,] 0.8419388\n  [96,] 2.0546380\n  [97,] 1.4433198\n  [98,] 0.9948003\n  [99,] 1.1990555\n [100,] 0.7197558\n [101,] 0.6681426\n [102,] 1.1277194\n [103,] 0.9402664\n [104,] 0.8360112\n [105,] 1.2427407\n [106,] 0.7076889\n [107,] 0.7154894\n [108,] 1.5948556\n [109,] 1.3095611\n [110,] 0.9337607\n [111,] 0.8970954\n [112,] 0.9544802\n [113,] 1.9199597\n [114,] 0.8123536\n [115,] 0.7468794\n [116,] 0.9622113\n [117,] 0.2663180\n [118,] 0.8779799\n [119,] 0.5472752\n [120,] 1.9629848\n [121,] 1.4655385\n [122,] 0.4355588\n [123,] 1.1348573\n [124,] 1.2765454\n [125,] 1.0064938\n [126,] 0.9185663\n [127,] 1.1743829\n [128,] 0.8495841\n [129,] 1.4028903\n [130,] 1.8667872\n [131,] 1.0533410\n [132,] 0.4666848\n [133,] 0.9977309\n [134,] 0.6676392\n [135,] 0.7978343\n [136,] 0.8246253\n [137,] 1.5295156\n [138,] 1.3533550\n [139,] 0.7923841\n [140,] 2.0718269\n [141,] 1.5044331\n [142,] 0.6403341\n [143,] 0.8390345\n [144,] 0.3248323\n [145,] 0.4747476\n [146,] 2.4191610\n [147,] 0.9908124\n [148,] 0.6973857\n [149,] 1.1067674\n [150,] 1.7477629\n [151,] 0.8553347\n [152,] 0.8154237\n [153,] 1.0061334\n [154,] 1.2086589\n [155,] 1.3321821\n [156,] 0.9336491\n [157,] 0.3682444\n [158,] 0.6032235\n [159,] 1.0119507\n [160,] 0.4058727\n [161,] 0.6800951\n [162,] 1.0304500\n [163,] 0.7032275\n [164,] 0.8425849\n [165,] 0.7981298\n [166,] 0.8403245\n [167,] 0.5825641\n [168,] 0.8772570\n [169,] 0.6738811\n [170,] 1.5591647\n [171,] 0.4762378\n [172,] 0.9215314\n [173,] 0.8388783\n [174,] 0.6199798\n [175,] 0.6565736\n [176,] 2.1060625\n [177,] 1.3489550\n [178,] 1.0062732\n [179,] 1.1919056\n [180,] 0.4609944\n [181,] 0.7502184\n [182,] 1.4279961\n [183,] 1.4781943\n [184,] 1.0519368\n [185,] 1.6619095\n [186,] 0.4739645\n [187,] 0.6738266\n [188,] 1.0003629\n [189,] 1.0771126\n [190,] 1.7081498\n [191,] 0.9302083\n [192,] 1.2599451\n [193,] 0.6606229\n [194,] 1.3758623\n [195,] 0.6238083\n [196,] 0.4068884\n [197,] 0.7085488\n [198,] 0.5056951\n [199,] 0.9601244\n [200,] 1.1108904\n [201,] 1.1790648\n [202,] 0.9693691\n [203,] 0.8400174\n [204,] 1.8135628\n [205,] 0.8523361\n [206,] 0.9223765\n [207,] 0.8702576\n [208,] 1.0758547\n [209,] 1.0101402\n [210,] 1.1017830\n [211,] 0.7452655\n [212,] 0.9013168\n [213,] 1.3029965\n [214,] 0.8205975\n [215,] 0.9645074\n [216,] 0.9345365\n [217,] 1.1337161\n [218,] 0.7369172\n [219,] 1.2837005\n [220,] 0.7697555\n [221,] 0.7783000\n [222,] 0.8023562\n [223,] 1.3639488\n [224,] 1.2673809\n [225,] 0.8001389\n [226,] 1.2582407\n [227,] 1.5006700\n [228,] 0.7652815\n [229,] 0.6640557\n [230,] 0.9377710\n [231,] 0.6535452\n [232,] 1.0500841\n [233,] 1.0768823\n [234,] 2.6332037\n [235,] 0.5858923\n [236,] 0.5960403\n [237,] 0.8137275\n [238,] 0.7397481\n [239,] 1.4897358\n [240,] 1.4026573\n [241,] 1.4366856\n [242,] 0.8597631\n [243,] 0.8066541\n [244,] 0.8044416\n [245,] 1.2362615\n [246,] 1.0821938\n [247,] 1.2111738\n [248,] 0.5439102\n [249,] 0.9361084\n [250,] 1.5508510\n [251,] 0.7175440\n [252,] 1.8257393\n [253,] 1.6070306\n [254,] 0.7039476\n [255,] 0.9591631\n [256,] 0.9814181\n [257,] 1.0474431\n [258,] 1.4948642\n [259,] 1.1846257\n [260,] 0.7772480\n [261,] 0.8201491\n [262,] 0.7828198\n [263,] 1.0798898\n [264,] 0.8728824\n [265,] 0.5473524\n [266,] 0.7452955\n [267,] 2.3839572\n [268,] 1.0123776\n [269,] 0.9346628\n [270,] 1.4210620\n [271,] 0.7026874\n [272,] 0.9224575\n [273,] 1.1474375\n [274,] 1.1292296\n [275,] 0.6998635\n [276,] 0.7763794\n [277,] 2.6533640\n [278,] 0.8259252\n [279,] 1.2755326\n [280,] 1.5899695\n [281,] 0.5814523\n [282,] 1.2370601\n [283,] 1.4848072\n [284,] 1.0604471\n [285,] 0.9492693\n [286,] 2.0029945\n [287,] 1.3647031\n [288,] 0.3773867\n [289,] 1.0488958\n [290,] 1.0414270\n [291,] 0.4160364\n [292,] 0.7416273\n [293,] 0.6785256\n [294,] 1.2160278\n [295,] 0.8776552\n [296,] 1.2948961\n [297,] 0.8161454\n [298,] 0.7670753\n [299,] 0.7581265\n [300,] 0.9536657\n [301,] 0.6757823\n [302,] 0.7529551\n [303,] 0.6625711\n [304,] 0.8492308\n [305,] 1.0948772\n [306,] 1.0211374\n [307,] 1.1225175\n [308,] 0.7004408\n [309,] 0.6943875\n [310,] 0.5761640\n [311,] 0.3944804\n [312,] 0.6041955\n [313,] 0.5616060\n [314,] 0.4347134\n [315,] 1.7510698\n [316,] 0.8216853\n [317,] 1.1183855\n [318,] 1.3944784\n [319,] 1.3092314\n [320,] 1.2653304\n [321,] 0.5144483\n [322,] 0.3861568\n [323,] 0.6571438\n [324,] 0.4778806\n [325,] 1.8443280\n [326,] 0.7905290\n [327,] 1.3643009\n [328,] 0.4526702\n [329,] 0.9294289\n [330,] 0.4619874\n [331,] 0.7534640\n [332,] 1.4867032\n [333,] 0.4736031\n [334,] 0.9352602\n [335,] 1.4226953\n [336,] 1.7456812\n [337,] 0.9558558\n [338,] 1.1741469\n [339,] 1.0515656\n [340,] 1.8289292\n [341,] 1.4863810\n [342,] 0.4136271\n [343,] 1.3661146\n [344,] 1.1698071\n [345,] 0.8921639\n [346,] 0.9789351\n [347,] 0.9428690\n [348,] 1.0009387\n [349,] 1.1333190\n [350,] 1.1280314\n [351,] 0.7879399\n [352,] 0.7143198\n [353,] 0.6974031\n [354,] 0.6677926\n [355,] 0.9368312\n [356,] 0.7752936\n [357,] 0.6613949\n [358,] 0.7096997\n [359,] 0.5278780\n [360,] 1.5979675\n [361,] 1.0102512\n [362,] 0.9657582\n [363,] 0.6788591\n [364,] 1.2513459\n [365,] 0.8923123\n [366,] 0.5935933\n [367,] 1.4005758\n [368,] 0.9663236\n [369,] 0.7198910\n [370,] 1.4308977\n [371,] 0.7303822\n [372,] 0.9000348\n [373,] 0.8130237\n [374,] 1.1551960\n [375,] 0.6321509\n [376,] 1.2640836\n [377,] 0.6367746\n [378,] 0.9342290\n [379,] 0.7619839\n [380,] 0.6642945\n [381,] 0.9393655\n [382,] 0.4842257\n [383,] 1.0335787\n [384,] 0.2640405\n [385,] 1.9530058\n [386,] 0.7716831\n [387,] 1.8781195\n [388,] 0.7438069\n [389,] 2.2227582\n [390,] 1.1514433\n [391,] 0.9942989\n [392,] 1.0074796\n [393,] 0.6961640\n [394,] 0.7870044\n [395,] 1.3591964\n [396,] 0.8059156\n [397,] 0.8355524\n [398,] 0.6160495\n [399,] 1.0430180\n [400,] 0.8523824\n [401,] 1.5934819\n [402,] 0.6773612\n [403,] 0.8013232\n [404,] 1.1993369\n [405,] 1.0512708\n [406,] 1.8519746\n [407,] 0.8757457\n [408,] 1.0569673\n [409,] 1.0775598\n [410,] 1.1199711\n [411,] 1.1922530\n [412,] 0.7866440\n [413,] 0.9744095\n [414,] 1.3679371\n [415,] 1.6040984\n [416,] 0.5837127\n [417,] 1.3503217\n [418,] 1.6066318\n [419,] 0.6603888\n [420,] 0.6193697\n [421,] 0.8862458\n [422,] 1.1215359\n [423,] 1.8969206\n [424,] 0.9385519\n [425,] 1.2601149\n [426,] 0.8316728\n [427,] 1.1814472\n [428,] 2.8395517\n [429,] 0.7996109\n [430,] 0.9794073\n [431,] 0.5975595\n [432,] 0.7908001\n [433,] 1.6127786\n [434,] 0.8268354\n [435,] 0.9649756\n [436,] 1.7133208\n [437,] 1.2635960\n [438,] 1.2866071\n [439,] 1.0576726\n [440,] 0.5306406\n [441,] 0.8742260\n [442,] 1.1792678\n [443,] 0.9612873\n [444,] 1.0988587\n [445,] 1.5794592\n [446,] 1.0438684\n [447,] 0.6670132\n [448,] 1.9153712\n [449,] 1.9637715\n [450,] 0.7159528\n [451,] 0.8119893\n [452,] 1.1489600\n [453,] 0.9023244\n [454,] 0.9857213\n [455,] 0.6793446\n [456,] 1.0284229\n [457,] 0.9268201\n [458,] 1.1315809\n [459,] 0.8589509\n [460,] 0.8169525\n [461,] 1.4750788\n [462,] 0.7496458\n [463,] 0.5848952\n [464,] 0.7189014\n [465,] 0.6204754\n [466,] 0.7702430\n [467,] 3.0760004\n [468,] 1.7608209\n [469,] 0.5577154\n [470,] 1.4365379\n [471,] 1.4839914\n [472,] 0.9486829\n [473,] 0.7956295\n [474,] 1.0041222\n [475,] 1.0792992\n [476,] 0.8408217\n [477,] 1.6118840\n [478,] 1.2312092\n [479,] 1.3609367\n [480,] 1.2067170\n [481,] 1.6461551\n [482,] 1.1098814\n [483,] 0.5815324\n [484,] 1.2958019\n [485,] 0.5281246\n [486,] 0.8585710\n [487,] 0.9438420\n [488,] 1.0361399\n [489,] 0.8841896\n [490,] 1.6976918\n [491,] 1.1097510\n [492,] 0.6784978\n [493,] 1.0010389\n [494,] 1.7725987\n [495,] 0.5220205\n [496,] 1.0089502\n [497,] 1.4860288\n [498,] 1.8923380\n [499,] 1.2821390\n [500,] 0.8784554\n [501,] 0.8777686\n [502,] 1.6479702\n [503,] 0.3985830\n [504,] 0.3962295\n [505,] 0.9262719\n [506,] 0.9455292\n [507,] 0.9251755\n [508,] 2.0208831\n [509,] 1.4155221\n [510,] 0.7336200\n [511,] 0.7850498\n [512,] 1.5910079\n [513,] 1.0185668\n [514,] 1.0460104\n [515,] 1.1437914\n [516,] 0.9050149\n [517,] 0.8035864\n [518,] 1.0520923\n [519,] 1.6509403\n [520,] 0.9485036\n [521,] 0.7115430\n [522,] 1.3963897\n [523,] 0.7604124\n [524,] 0.7997896\n [525,] 0.8465368\n [526,] 0.9852758\n [527,] 0.6827786\n [528,] 1.1769061\n [529,] 0.6879249\n [530,] 0.7899654\n [531,] 0.5698013\n [532,] 0.8842289\n [533,] 2.6513424\n [534,] 1.0939446\n [535,] 0.7898021\n [536,] 0.8147453\n [537,] 1.2140595\n [538,] 0.6591184\n [539,] 0.8393913\n [540,] 1.0233121\n [541,] 1.2381719\n [542,] 0.5110001\n [543,] 0.7646791\n [544,] 0.7475627\n [545,] 1.1081737\n [546,] 1.3478255\n [547,] 1.1151663\n [548,] 0.8014322\n [549,] 1.0767288\n [550,] 1.2122135\n [551,] 0.9519276\n [552,] 1.6617904\n [553,] 0.7743693\n [554,] 1.3326022\n [555,] 0.4702571\n [556,] 0.7436965\n [557,] 1.6217353\n [558,] 1.4318648\n [559,] 1.0274740\n [560,] 0.6377227\n [561,] 1.3193315\n [562,] 0.5786926\n [563,] 0.7231989\n [564,] 0.2851996\n [565,] 0.3650425\n [566,] 1.0522937\n [567,] 0.5703126\n [568,] 0.8050937\n [569,] 0.4503331\n [570,] 0.7122370\n [571,] 0.8819020\n [572,] 0.7714385\n [573,] 0.7233526\n [574,] 1.6450777\n [575,] 1.4985357\n [576,] 1.4503597\n [577,] 0.7815944\n [578,] 1.1468518\n [579,] 1.8714636\n [580,] 0.7827182\n [581,] 1.2273104\n [582,] 0.4884806\n [583,] 0.8828140\n [584,] 0.6788610\n [585,] 1.0419636\n [586,] 1.0158278\n [587,] 0.5389564\n [588,] 0.7930568\n [589,] 1.3048304\n [590,] 1.0945713\n [591,] 0.6550372\n [592,] 1.6274987\n [593,] 1.2229634\n [594,] 0.8408857\n [595,] 0.9556498\n [596,] 0.6906298\n [597,] 2.0029042\n [598,] 0.7516475\n [599,] 0.9414026\n [600,] 1.0010650\n [601,] 0.9780873\n [602,] 1.2716579\n [603,] 1.1449026\n [604,] 1.0553143\n [605,] 1.1130427\n [606,] 0.7841182\n [607,] 1.1578110\n [608,] 1.6123949\n [609,] 0.9265977\n [610,] 1.0198548\n [611,] 0.6647458\n [612,] 1.3470644\n [613,] 0.9191686\n [614,] 1.0483869\n [615,] 0.9601701\n [616,] 0.7284904\n [617,] 0.8887999\n [618,] 0.9655551\n [619,] 1.0021245\n [620,] 1.6736188\n [621,] 1.1036328\n [622,] 0.6383364\n [623,] 0.7497011\n [624,] 0.3991816\n [625,] 1.1098361\n [626,] 1.5052506\n [627,] 1.4220487\n [628,] 0.7768215\n [629,] 0.9654913\n [630,] 1.6320503\n [631,] 0.8470110\n [632,] 0.6143199\n [633,] 0.4797388\n [634,] 1.2245252\n [635,] 0.4933556\n [636,] 0.5159171\n [637,] 1.5322786\n [638,] 0.9297709\n [639,] 1.2096926\n [640,] 0.6647641\n [641,] 0.7603668\n [642,] 1.0126839\n [643,] 0.6917319\n [644,] 0.9987544\n [645,] 0.8710559\n [646,] 0.7159691\n [647,] 1.7395091\n [648,] 1.5052827\n [649,] 1.1549154\n [650,] 0.8475777\n [651,] 0.5540226\n [652,] 0.6446049\n [653,] 0.8764935\n [654,] 2.2613992\n [655,] 1.0756627\n [656,] 0.7827463\n [657,] 1.7351834\n [658,] 1.3879341\n [659,] 1.0248647\n [660,] 1.2710529\n [661,] 1.9995982\n [662,] 0.9530648\n [663,] 1.0264613\n [664,] 1.3211122\n [665,] 1.4020787\n [666,] 1.4861293\n [667,] 1.0650711\n [668,] 0.3969514\n [669,] 1.1036307\n [670,] 0.9497661\n [671,] 1.1720965\n [672,] 1.2555416\n [673,] 0.5254982\n [674,] 0.6059300\n [675,] 0.7542074\n [676,] 1.1376381\n [677,] 0.7507373\n [678,] 0.5777125\n [679,] 1.0049130\n [680,] 0.8775843\n [681,] 1.5811939\n [682,] 1.3096946\n [683,] 1.0128141\n [684,] 0.9821165\n [685,] 0.8278430\n [686,] 0.4447845\n [687,] 1.1821780\n [688,] 0.7649361\n [689,] 0.9999616\n [690,] 0.9191673\n [691,] 0.6168196\n [692,] 2.0148695\n [693,] 0.9906245\n [694,] 0.6074741\n [695,] 0.5113902\n [696,] 0.9757688\n [697,] 1.1030728\n [698,] 0.6872698\n [699,] 1.2680956\n [700,] 0.8835791\n [701,] 1.5787880\n [702,] 0.6347134\n [703,] 0.7344958\n [704,] 0.5509849\n [705,] 1.1617276\n [706,] 1.0678092\n [707,] 1.4692061\n [708,] 1.0881524\n [709,] 0.6695910\n [710,] 0.7753518\n [711,] 1.4115232\n [712,] 0.3822089\n [713,] 0.9080424\n [714,] 0.8734658\n [715,] 1.5312500\n [716,] 0.8855532\n [717,] 0.8922694\n [718,] 0.8540800\n [719,] 0.5648934\n [720,] 0.8925795\n [721,] 1.6835659\n [722,] 1.2699480\n [723,] 0.9480144\n [724,] 0.4873501\n [725,] 1.4660703\n [726,] 1.3403206\n [727,] 0.4708188\n [728,] 0.6231866\n [729,] 2.6275301\n [730,] 0.5811493\n [731,] 0.4350171\n [732,] 1.0436309\n [733,] 1.2708625\n [734,] 0.9385576\n [735,] 0.9926020\n [736,] 0.5727729\n [737,] 0.2981709\n [738,] 0.6905867\n [739,] 0.9933417\n [740,] 1.4648702\n [741,] 1.0903207\n [742,] 1.0901867\n [743,] 1.1373228\n [744,] 1.1236182\n [745,] 0.7860639\n [746,] 0.9151859\n [747,] 1.1365619\n [748,] 1.0043211\n [749,] 1.1384638\n [750,] 0.9089713\n [751,] 1.2716192\n [752,] 0.9856708\n [753,] 1.9829178\n [754,] 0.8601711\n [755,] 0.3547898\n [756,] 1.2491089\n [757,] 0.6064096\n [758,] 1.3701582\n [759,] 0.7666979\n [760,] 1.1465875\n [761,] 1.6485164\n [762,] 0.5601745\n [763,] 0.7640381\n [764,] 0.7462475\n [765,] 0.9058168\n [766,] 1.4594132\n [767,] 0.7058350\n [768,] 0.4929972\n [769,] 0.9717025\n [770,] 0.5865832\n [771,] 0.5135598\n [772,] 0.7528624\n [773,] 0.7647569\n [774,] 1.5494439\n [775,] 1.5321672\n [776,] 1.2723336\n [777,] 1.3750043\n [778,] 0.6450450\n [779,] 1.4593406\n [780,] 0.4568231\n [781,] 1.0768763\n [782,] 0.7946096\n [783,] 1.0275471\n [784,] 1.2840721\n [785,] 0.8653640\n [786,] 1.4459419\n [787,] 1.1485698\n [788,] 1.2635760\n [789,] 1.7116361\n [790,] 0.4255087\n [791,] 1.4096811\n [792,] 0.5967885\n [793,] 0.9246016\n [794,] 0.7766885\n [795,] 0.4195362\n [796,] 0.6385803\n [797,] 0.7249236\n [798,] 0.7517525\n [799,] 1.0521368\n [800,] 1.0759493\n [801,] 1.5092213\n [802,] 0.8963566\n [803,] 0.7120206\n [804,] 0.6711344\n [805,] 1.4962775\n [806,] 0.6045987\n [807,] 0.6317447\n [808,] 1.2567686\n [809,] 1.5991375\n [810,] 1.3640191\n [811,] 0.9880754\n [812,] 0.9671767\n [813,] 1.4740601\n [814,] 1.3092224\n [815,] 0.3311038\n [816,] 0.7378053\n [817,] 0.8897675\n [818,] 0.9491255\n [819,] 0.7235911\n [820,] 0.8625198\n [821,] 1.0424529\n [822,] 0.9827649\n [823,] 1.1378564\n [824,] 0.7709857\n [825,] 0.8860889\n [826,] 1.4839919\n [827,] 0.8049073\n [828,] 1.1658418\n [829,] 0.6535602\n [830,] 1.6945666\n [831,] 0.7122305\n [832,] 0.8354899\n [833,] 0.7410459\n [834,] 1.0333930\n [835,] 0.8956504\n [836,] 3.3265944\n [837,] 0.4607808\n [838,] 2.0016576\n [839,] 0.9664852\n [840,] 0.8591136\n [841,] 0.4436233\n [842,] 1.2676282\n [843,] 1.8280519\n [844,] 1.5233518\n [845,] 1.5538160\n [846,] 1.1909282\n [847,] 0.6403338\n [848,] 1.1079572\n [849,] 0.9946946\n [850,] 1.6265167\n [851,] 2.2160460\n [852,] 0.7047208\n [853,] 0.9520784\n [854,] 0.6697161\n [855,] 1.3412183\n [856,] 1.1564769\n [857,] 1.4735548\n [858,] 1.1963289\n [859,] 0.8908181\n [860,] 1.1058037\n [861,] 1.0176669\n [862,] 0.6967462\n [863,] 1.1055883\n [864,] 1.2232689\n [865,] 1.5669295\n [866,] 0.9927264\n [867,] 0.7922969\n [868,] 0.8924227\n [869,] 2.2273688\n [870,] 1.9035866\n [871,] 1.0281940\n [872,] 0.6114104\n [873,] 1.1185919\n [874,] 1.2752002\n [875,] 1.3628293\n [876,] 1.6860143\n [877,] 0.9036242\n [878,] 1.5502328\n [879,] 2.1304006\n [880,] 0.7798978\n [881,] 0.8582456\n [882,] 0.7763562\n [883,] 1.1338050\n [884,] 0.9490513\n [885,] 1.8062837\n [886,] 0.6245626\n [887,] 0.9137725\n [888,] 0.3311868\n [889,] 1.2194877\n [890,] 1.0160828\n [891,] 1.0822496\n [892,] 0.8741492\n [893,] 1.0376285\n [894,] 0.5971172\n [895,] 0.9930797\n [896,] 1.1978342\n [897,] 0.9820470\n [898,] 0.8871070\n [899,] 2.0435166\n [900,] 0.8820640\n [901,] 0.6704312\n [902,] 0.5520564\n [903,] 0.7753335\n [904,] 0.8594861\n [905,] 0.8798928\n [906,] 0.5390696\n [907,] 0.5915295\n [908,] 1.2222008\n [909,] 1.0178717\n [910,] 0.9276021\n [911,] 2.5061406\n [912,] 0.9791406\n [913,] 0.9181410\n [914,] 1.8180531\n [915,] 0.9761132\n [916,] 0.7540974\n [917,] 1.0614900\n [918,] 0.6780670\n [919,] 0.8102315\n [920,] 1.1964871\n [921,] 0.5333357\n [922,] 0.7619583\n [923,] 0.7831024\n [924,] 1.1944872\n [925,] 0.8343710\n [926,] 1.2736611\n [927,] 1.0380704\n [928,] 0.6784847\n [929,] 0.9797288\n [930,] 0.8117795\n [931,] 0.5183487\n [932,] 0.7292961\n [933,] 0.8450584\n [934,] 0.6513820\n [935,] 0.7342797\n [936,] 0.8651456\n [937,] 0.7114826\n [938,] 0.7565788\n [939,] 1.1157545\n [940,] 0.9362141\n [941,] 1.4258037\n [942,] 1.6709660\n [943,] 0.8322643\n [944,] 1.0377285\n [945,] 1.2729434\n [946,] 0.9317816\n [947,] 0.7424998\n [948,] 0.5997798\n [949,] 1.7143862\n [950,] 0.8865491\n [951,] 1.1110944\n [952,] 0.4839150\n [953,] 1.1751674\n [954,] 1.4343744\n [955,] 0.8499582\n [956,] 0.7519829\n [957,] 1.1345566\n [958,] 1.1807313\n [959,] 0.8559385\n [960,] 0.7042612\n [961,] 1.0249730\n [962,] 0.5327833\n [963,] 1.9667756\n [964,] 1.4416414\n [965,] 1.3192209\n [966,] 1.2340020\n [967,] 0.7627219\n [968,] 0.8285015\n [969,] 0.6307524\n [970,] 0.5265525\n [971,] 1.2354141\n [972,] 2.2840114\n [973,] 0.8072222\n [974,] 0.7202883\n [975,] 0.5839934\n [976,] 0.9968098\n [977,] 1.0683461\n [978,] 0.4833957\n [979,] 1.2610925\n [980,] 1.6876075\n [981,] 0.6734502\n [982,] 0.9832715\n [983,] 0.9257128\n [984,] 0.6049874\n [985,] 0.9722589\n [986,] 0.7110103\n [987,] 1.2555990\n [988,] 0.5739538\n [989,] 0.5208723\n [990,] 0.7150321\n [991,] 0.5798138\n [992,] 1.5866842\n [993,] 1.1645795\n [994,] 0.7675501\n [995,] 1.0302099\n [996,] 0.6968812\n [997,] 1.3375302\n [998,] 0.6388878\n [999,] 0.9733554\n\n$model.matrix\n   (Intercept) Management1 Management2 Management3\n1            1          -1          -1          -1\n2            1           1           0           0\n3            1          -1          -1          -1\n4            1          -1          -1          -1\n5            1           0           1           0\n6            1           0           1           0\n7            1           0           1           0\n8            1           0           1           0\n9            1           0           1           0\n10           1           1           0           0\n11           1           1           0           0\n12           1          -1          -1          -1\n13           1          -1          -1          -1\n14           1           0           0           1\n15           1           0           0           1\n16           1          -1          -1          -1\n17           1           0           0           1\n18           1           0           0           1\n19           1           0           0           1\n20           1           0           0           1\n\n$terms\ndune ~ Management\nattr(,\"variables\")\nlist(dune, Management)\nattr(,\"factors\")\n           Management\ndune                0\nManagement          1\nattr(,\"term.labels\")\n[1] \"Management\"\nattr(,\"order\")\n[1] 1\nattr(,\"intercept\")\n[1] 1\nattr(,\"response\")\n[1] 1\nattr(,\".Environment\")\n&lt;environment: R_GlobalEnv&gt;\n\nattr(,\"class\")\n[1] \"adonis\"\n\n\n\n\n8. Multivariate GLMs\nPurpose: Model multivariate responses.\nR Package: - mvabund\n\n\nApplications of Multivariate GLMs\nMultivariate GLMs are used to model multiple response variables simultaneously. Applications include: - Analyzing species abundance data - Modeling the effects of environmental variables on community structure - Studying interactions between multiple ecological factors\n\n\n9. Distance-based RDA (db-RDA)\nPurpose: Constrained ordination using distance matrices.\nR Package: - vegan: capscale()\n\n\nApplications of Distance-based RDA (db-RDA)\ndb-RDA is a flexible method for constrained ordination. Applications include: - Analyzing genetic or molecular data - Studying the effects of environmental gradients on community composition - Visualizing relationships between response and explanatory variables\n\ndb_rda &lt;- capscale(dune ~ ., data = dune.env, distance = \"bray\")\n\n\nSome constraints or conditions were aliased because they were redundant. This\ncan happen if terms are linearly dependent (collinear): 'Manure^4'\n\nplot(db_rda)\n\n\n\n\n\n\n\n\n\n\n10. Indicator Species Analysis\nPurpose: Identifies species associated with site groups.\nR Packages: - labdsv: indval() - vegan: multipatt()\n\n\nApplications of Indicator Species Analysis\nIndicator species analysis identifies species that are characteristic of specific groups or conditions. Applications include: - Identifying species associated with particular habitats - Studying the effects of environmental changes on species distribution - Monitoring biodiversity and conservation status\nThis post aims to provide a clear and concise guide to multivariate statistical methods, making it easier for researchers and students to apply these techniques in their work."
  },
  {
    "objectID": "posts/Post in Medium and RPubs/index.html",
    "href": "posts/Post in Medium and RPubs/index.html",
    "title": "Posts in Medium and Other Platforms",
    "section": "",
    "text": "Here are some of my posts related to teaching and educational topics:\n1: My experimental COVID-19 dashboard\n2: How to make simple animation for the COVID-19?\n3: How to make a dynamic map of COVID-19?\n4: COVID-19 notification system for Bangladesh\n5: ArcGIS COVID-19 dashboard for Bangladesh\n6: A COVID-19 prediction model for Bangladesh\n7: Impacts of the coronavirus pandemic on nature conservation\n8: Ocean Acidification and its major impacts in Bay of Bengal\n9: Ocean circulation modeling in the 21st century (part-1)\n10: Analysis of seawater property with Julia\n11: Practical Ecological data analysis with R\n12: Analysis of Argo Float Data in the Bay of Bengal with R\n13: Data analysis and visualization of digital elevation of Bangladesh\n14: Principal Component Analysis (PCA) with R\n15: Scientific Research Paper Writing with R markdown"
  },
  {
    "objectID": "posts/Remote sensing/index.html",
    "href": "posts/Remote sensing/index.html",
    "title": "Importance of Remote Sensing in Protecting Local Economies and Environments",
    "section": "",
    "text": "Remote sensing is a vital tool for protecting the environment and supporting the livelihoods of coastal communities. By providing timely, large-scale, and high-resolution data on ocean color and water quality, remote sensing informs policies, guides resource management, and helps prevent economic and ecological disasters."
  },
  {
    "objectID": "posts/Remote sensing/index.html#fisheries-and-aquaculture-monitoring",
    "href": "posts/Remote sensing/index.html#fisheries-and-aquaculture-monitoring",
    "title": "Importance of Remote Sensing in Protecting Local Economies and Environments",
    "section": "Fisheries and Aquaculture Monitoring",
    "text": "Fisheries and Aquaculture Monitoring\nRemote sensing enables the monitoring of phytoplankton blooms, temperature anomalies, and turbidity, which directly impact fish health and productivity. This helps safeguard fisheries-dependent economies (Li et al., 2024).\nThis study also references the work of (Li et al., 2024), which discusses the prediction of daily distribution of chlorophyll-a using remote sensing, machine learning, and modeling techniques. This research is published in Science of the Total Environment and provides valuable insights into the integration of advanced technologies for environmental monitoring(Cen et al., 2022; Li et al., 2024; Shin et al., 2022).\nExample (Gulf of Mexico): Remote sensing detected harmful algal blooms (HABs) in near-real time, allowing local fisheries to temporarily halt harvesting to avoid contaminated shellfish. This prevented health risks and long-term fishery bans(Ahmad & Jhara, 2025)."
  },
  {
    "objectID": "posts/Remote sensing/index.html#tourism-protection",
    "href": "posts/Remote sensing/index.html#tourism-protection",
    "title": "Importance of Remote Sensing in Protecting Local Economies and Environments",
    "section": "Tourism Protection",
    "text": "Tourism Protection\nBeaches and coastal tourism areas are vulnerable to water pollution, HABs, and turbid plumes. Remote sensing provides early warning systems to maintain water quality standards.\nExample (Florida, USA): Satellite detection of red tide events enabled state authorities to close affected beaches early, issue public advisories, and plan cleanup efforts. These actions minimized economic losses in the tourism sector."
  },
  {
    "objectID": "posts/Remote sensing/index.html#disaster-risk-reduction-and-coastal-resilience",
    "href": "posts/Remote sensing/index.html#disaster-risk-reduction-and-coastal-resilience",
    "title": "Importance of Remote Sensing in Protecting Local Economies and Environments",
    "section": "Disaster Risk Reduction and Coastal Resilience",
    "text": "Disaster Risk Reduction and Coastal Resilience\nSatellite-derived data on sediment plumes, flood extent, and coastal erosion support disaster preparedness, helping communities recover faster and reduce losses.\nExample (Bay of Bengal): After Cyclone Amphan (2020), remote sensing was used to map suspended sediment loads and salinity changes. These insights supported emergency freshwater supply efforts and aquaculture recovery."
  },
  {
    "objectID": "posts/World bioclimatic Data downloading, analysis and visualization/index.html",
    "href": "posts/World bioclimatic Data downloading, analysis and visualization/index.html",
    "title": "Basic R",
    "section": "",
    "text": "You will find basic R codes\n\n1+2\n\n[1] 3"
  },
  {
    "objectID": "research/index.html",
    "href": "research/index.html",
    "title": "Research",
    "section": "",
    "text": "My research integrates ** remote sensing, machine learning (ML), and hydrodynamic modeling** to monitor and understand coastal and aquatic environmental processes, with a strong focus on water quality dynamics. I primarily investigate parameters such as chlorophyll-a (Chl-a), particulate organic carbon (POC), total suspended matter (TSM), turbidity, colored dissolved organic matter (CDOM), and sea surface temperature (SST). By leveraging multi-source satellite data (e.g., Landsat, Sentinel-3 OLCI, MODIS, VIIRS & PACE) and field observations, I develop and validate ML models—including XGBoost, random forest, and convolutional neural networks—for accurate and scalable estimation of these indicators in complex coastal and estuarine systems.\nA key objective of my work is to improve water quality monitoring in regions experiencing rapid environmental changes, such as the Gulf of Mexico/ AmeriCA and the Bay of Bengal. I analyze long-term trends and seasonal variability of key parameters and explore how oceanographic drivers, including wind, currents, and temperature anomalies, influence biogeochemical dynamics. I also integrate Google Earth Engine and cloud computing platforms to enhance large-scale, time-efficient analyses.\nHydrodynamic modeling is another cornerstone of my research. I use tools like the Environmental Fluid Dynamics Code (EFDC) to simulate water circulation, sediment transport, and hypoxic zone formation. I combine these simulations with field data, such as ADCP measurements, to model how physical processes influence the spatial distribution of water quality parameters. My research includes examining how river discharge, bathymetry, and land use changes affect hydrological connectivity and water column mixing.\nThrough an interdisciplinary approach, I aim to support early warning systems for harmful algal blooms, sediment resuspension events, and nutrient pollution hotspots. Ultimately, my work contributes to evidence-based decision-making in water resource management, marine conservation, and policy development under changing environmental and climatic conditions."
  },
  {
    "objectID": "research/index.html#publications",
    "href": "research/index.html#publications",
    "title": "Research",
    "section": "Publications",
    "text": "Publications\n\nIslam, M. S., Dash, P., Liles, J. P., Ahmad, H., Nur, A. M., Panda, R. M., … & Moorhead, R. J. (2025). Spatiotemporal dynamics of cyanobacterial blooms: Integrating machine learning and feature selection techniques with uncrewed aircraft systems and autonomous surface vessel data. Journal of Environmental Management, 381, 124878. https://doi.org/10.1016/j.jenvman.2025.124878\nAhmad, H., F. Jose, Dash, P., D. J. Shoemaker, and Jhara, S. I. (2025). Machine Learning-Based Estimation of Chlorophyll-a in the Mississippi Sound using Landsat and Ocean Optics Data. Environmental Earth Sciences.https://link.springer.com/article/10.1007/s12665-025-12191-7\nAhmad, H., Miranda, L. E., Corey G. Dunn, Colvin, M., and Dash, P. (2025). Confluence of time and space: An innovation for quantifying dynamics of hydrologic floodplain connectivity with remote sensing and GIS. River Research and Applications. doi.org/10.1002/RRA.4426.\nFrank Juma Ong’ondo, Shrinidhi Ambinakudige, Philista Adhiambo Malaki, Peter Njoroge, Hafez Ahmad. (2025). Using geographic information systems and remote sensing techniques to classify land cover types and predict grassland bird abundance and distribution in Nairobi National Park, Kenya. doi.org/10.1016/j.ijgeop.2025.02.003.\nIslam, M. S., Dash, P., Nur, A., Ahmad, H., Panda, R. M., Wolfe, J. S., Turnage, G., Hathcock, L., Chesser, G. D., and Moorhead, R. J. (2024). Estimation of Chlorophyll-a in Uncrewed Aircraft Systems Imagery using Autonomous Surface Vessel data by employing Machine Learning Algorithms and Innovative Feature Selection Techniques. Ecological Informatics, 85, 102954.https://www.sciencedirect.com/science/article/pii/S1574954124004965\nAhmad, H., Jhara, S. I. (2024). Mapping the Dynamics of Particulate Organic Carbon: Satellite Observations of Coastal to Shelf Variability in the Northeastern Gulf of Mexico. Ocean Science Journal. doi.org/10.1007/s12601-024-00203-9.\nAhmad, H., Dash, P., Panda, R. M. (2024). Integrating machine learning and remote sensing for long-term monitoring of chlorophyll-a in Chilika Lagoon, India. Environmental Monitoring and Assessment. doi.org/10.1007/s10661-024-13463-8.\nAhmad, H., Miranda, L. E., Dunn, C. G., Boudreau, M. R., Colvin, M. E. (2024). Connectivity patterns between floodplain lakes and neighboring streams in the historical floodplain of the Lower Mississippi River. Ecological Indicators. doi.org/10.1016/j.ecolind.2024.112808.\nAhmad, H., F. Jose, and D. J. Shoemaker. (2024). Mapping, Dynamics, and Future Change Analysis of Sundarbans Delta using Cellular Automata and Artificial Neural Network Modeling. IEEE Journal of Selected Topics in Applied Earth Observations and Remote Sensing. doi: 10.1109/JSTARS.2024.3367116.\nAhmad, Hafez. “Hydrologic connectivity between oxbow lakes and rivers within the Lower Mississippi Alluvial Valley” (2024). Theses and Dissertations, 6068. https://scholarsjunction.msstate.edu/td/6068\nAhmad, H., Abdallah, M., Jose, F., Elzain, et al. (2023). Evaluation and mapping of predicted future land use changes using hybrid models in a coastal area. Ecological Informatics, 102324. doi.org/10.1016/j.ecoinf.2023.102324.\nAhmad Hafez, Jose Felix, Bhuyan Md. Simul, Islam Md. Nazrul, Dash Padmanava. (2024). Seasonal influence of freshwater discharge on spatio-temporal variations in primary productivity, sea surface temperature, and euphotic zone depth in the northern Bay of Bengal. Acta Oceanologica Sinica., doi: 10.1007/s13131-023-2254-y\nAhmad, H., Jose, F., Islam, M. S., & Jhara, S. I. (2023). Green Energy, Blue Economy: Integrating Renewable Energy and Sustainable Development for Bangladesh. Marine Technology Society Journal, 57(4), 52-69.https://www.ingentaconnect.com/content/mts/mtsj/2023/00000057/00000004/art00007\nAhmad, H. (2019). Machine learning applications in oceanography. Aquatic Research, 2(3), 161-169. doi.org/10.3153/AR19014.\nAhmad, H., Jhara, S.I. (2019). Present status of impacts of climate change and adaptations in Bangladesh coastal areas. In Social Change A journal for social development (Vol. 9, pp. 71–81). Young Power in Social Action.\nAhmad, H. (2019) ‘Bangladesh Coastal Zone Management Status and Future Trends’, Journal of Coastal Zone Management, 22(1), pp. 1–7. doi: 10.4172/2473-3350.1000466."
  },
  {
    "objectID": "research/index.html#submitted-manuscripts",
    "href": "research/index.html#submitted-manuscripts",
    "title": "Research",
    "section": "Submitted Manuscripts",
    "text": "Submitted Manuscripts\n\nAhmad, H., Jose, Felix, Dash, P. Bhuyan, Md. Simul. (2025). Predictive Analysis of Land Use Modeling for Chittagong, Bangladesh Utilizing Remote Sensing and Machine Learning. Remote Sensing in Earth Systems Sciences.\nAhmad, H., Jose, Felix, MM Nabi; Shakila Islam Jhara, Frank Juma Ong’ondo (2025). Land Use and Land Cover Dynamics of Irrawaddy Delta: Remote Sensing Analysis and Future Projection. Remote Sensing Applications: Society and Environment.\nAhmad, H. (2025). River Discharge Dynamics: Temporal and Spatial Effects of River Discharge on Chlorophyll-a and Variability in the Northern Gulf of Mexico. Estuarine, Coastal and Shelf Science.\nAhmad, H, F. Jose, D. J. Shoemaker, Dash, P and Jhara, S. I. (2025). Hypoxia in the northern and eastern Gulf of Mexico: A Machine Learning Approach for Evaluation and Prediction. Regional Studies in Marine Science.\nAhmad, H, et al. (2025). Long-Term Trends and Seasonal Drivers of Water Quality in US Southern Coastal National Reserves: Unraveling the Impacts of Climate Change. Estuarine, Coastal and Shelf Science.\nAhmad, H, et al. (2025). Estimating algal bloom and trophic status in Lake Okeechobee, Florida using VIIRS and OCI/PACE satellite imagery and Machine learning.\nAhmad, H, Miranda, LE, Dunn, C. G, and Colvin, Mike. (2025). Hydrologic connectivity in floodplain systems: A review. Freshwater.\nAhmad, H, Jose, Felix, Dash, P. (2025). Mesoscale Eddies and their Impact on Primary Productivity in the Bay of Bengal. Journal of Environmental and Earth Sciences.\nAhmad, H, et al. (2025). Use and Land Cover Dynamics of Irrawaddy Delta: Remote Sensing Analysis and Future Projection. Remote Sensing Applications: Society and Environment.\nFrank Juma Ong’ondo, Shrinidhi Ambinakudige, Philista Adhiambo Malaki; Hafez Ahmad; Qingmin Meng; Kuria Antony. (2025). Land cover change and future projection analysis for Nairobi National Park and adjacent landscapes, using GIS, remote sensing, and cellular automata-artificial neural network. Remote Sensing Applications: Society and Environment."
  },
  {
    "objectID": "research/index.html#books-chapters",
    "href": "research/index.html#books-chapters",
    "title": "Research",
    "section": "Books / Chapters",
    "text": "Books / Chapters\n\nElisabeth Fahrni Mansur, G M Masum Billah, Nadim Parves, Robiul Kauser, Mohammad Shamsuddoha, Ashik Jahan Galib, Naim Khandakar, Hafez Ahmad, Rasel Mia, Md. Arafat Rahman Khan and Brian D. Smith (2022). Sharks and Rays of Bangladesh: A guide to identifying protected species and their commonly traded parts. Bangladesh Forest Department and Wildlife Conservation Society, Bangladesh."
  },
  {
    "objectID": "research/index.html#proceedings-and-conference-articles-in-prepsubmitted",
    "href": "research/index.html#proceedings-and-conference-articles-in-prepsubmitted",
    "title": "Research",
    "section": "Proceedings and Conference Articles (* in prep/submitted)",
    "text": "Proceedings and Conference Articles (* in prep/submitted)\n\nAhmad, H., Jose, Felix, Dash, P and Jhara, S. (2024). Integrating Remote Sensing and Field Survey Data: Machine Learning Approaches for Hypoxia Evaluation and Prediction in the Northern Gulf of Mexico. IGARSS 2024 - 2024 IEEE International Geoscience and Remote Sensing Symposium.\nMd. Mazaharul Islam, Hafez Ahmad, Mohammad Saydul Islam Sarkar, Jose Felix. Sustainable Coastal Zone Management in Bangladesh: A Blue Economy Perspective through Remote Sensing data. Taiwan International Conference on Ocean Governance 2023 (TICOG 2023).\nH. Ahmad and F. Jose, “Mapping, Dynamics, and Future Change Analysis of Sundarbans delta using Cellular Automata and Artificial Neural Network Modeling,” IGARSS 2023 - 2023 IEEE International Geoscience and Remote Sensing Symposium, Pasadena, CA, USA, 2023, pp. 2600-2602, doi: 10.1109/IGARSS52108.2023.10282057.\nMd. Mazaharul Islam, Hafez Ahmad, Mohammad Saydul Islam Sarkar, Jose Felix. A comprehensive framework for harnessing blue economy benefits in Bangladesh’s central coastal zone. 9th International Conference on Water and Flood Management-ICWFM 2023.\nH. Ahmad and F. Jose, “Seasonal influence of freshwater discharge on primary productivity and euphotic depth in the northern Bay of Bengal,” IGARSS 2023 - 2023 IEEE International Geoscience and Remote Sensing Symposium, Pasadena, CA, USA, 2023, pp. 4023-4024, doi: 10.1109/IGARSS52108.2023.10281755."
  },
  {
    "objectID": "research/index.html#abstracts-posters-in-prepsubmitted",
    "href": "research/index.html#abstracts-posters-in-prepsubmitted",
    "title": "Research",
    "section": "Abstracts/ Posters (* in prep/submitted)",
    "text": "Abstracts/ Posters (* in prep/submitted)\n\nDevin M. Raburn, Hafez Ahmad, Patrick F. Allison Jr., Susan B. Adams, Zanethia C. Barnett4, Ryan C. Garrick, Kenneth A. Sterling5, Sara Cathey, Michael E. Colvin, and Corey G. Dun. Hidden in plain sight: high-resolution stream networks reveal habitats for petitioned burrowing crayfishes. 155th Annual Meeting of the American Fisheries Society, 2025. San Antonio, Texas.\nAhmad, H., & Dash, P. Long-Term Water Quality Trends and Seasonal Drivers in the Western Mississippi Sound: A Remote Sensing and Machine Learning Approach. 14th International Symposium on Biogeochemistry of Wetland & Aquatic Systems June 1-5, 2025, at the Hilton Baton Rouge Capitol Center, Baton Rouge, LA.\nAhmad, H., & Dash, P. Remote Sensing and Machine Learning for Long-Term Water Quality Monitoring in the Western Mississippi Sound. Spring 2025 Graduate Research Symposium, Feb 15, 2025, at the Old Mian Academic Center, Starkville, MS.\nAhmad, H., & Dash, P Remote Sensing of Water Quality Parameters over Western Mississippi Sound by Using Sentinel-3 OLCI and Machine Learning. ASLO 2025 Aquatic Sciences Meeting 26-31 March 2025 in Charlotte, North Carolina, USA.\nAhmad, H., & Dash, P. Modeling Hypoxia in the Gulf of Mexico: A Machine Learning Approach with Remote Sensing and Field Data. Fall 2024 Graduate Research Symposium.\nAhmad, H., & Dash, P. Remote Sensing of Water Quality Parameters over Western Mississippi Sound by Using Sentinel-3 OLCI and Machine Learning. The Mississippi 2024 Water Resources Conference.\nAhmad, H., Jhara, S.I. AI-Driven Approaches for Real-Time Satellite Data Processing and Analysis. NASA Accelerating Informatics for Earth Science, 2024.\nAhmad, H., Jose, F., Jhara, S. I & Dash, P Predicting Hypoxia in the Northern and Eastern Gulf of Mexico: A Machine Learning Approach Combining Remote Sensing and Field Data. Mississippi Academy of Sciences Summer Science and Engineering Symposium, 2024.\nAhmad, H., Jose, F., Jhara, S. I & Dash, P. Mesoscale Eddies and their Impact on Primary Productivity in the Northern Bay of Bengal. Ocean Sciences Meeting 2024 – AGU, New Orleans, Louisiana.\nAhmad, H., Jose, F., Jhara, S. I & Dash, P. Hypoxia in the Northern Gulf of Mexico: A Comparative Analysis of Machine Learning Algorithms for Evaluation and Prediction. Ocean Sciences Meeting 2024 – AGU, New Orleans, Louisiana.\nAhmad, H., Jose, F., Jhara, S. I & Dash, P. Eddy-driven Chlorophyll Concentration Variability in the Andaman Sea. Ocean Sciences Meeting 2024 – AGU, New Orleans, Louisiana.\nIslam, M.S, Dash, P, Nur, A, Ahmad, H., Panda, R., Wolfe, J.S, Hathcock, Lee., Chesser, G. D., & Moorhead, R. Estimation of Chlorophyll-a in Uncrewed Aircraft Systems Imagery using Autonomous Surface Vessel data by employing Machine Learning Algorithms and Innovative Feature Selection Approaches. Ocean Sciences Meeting 2024 – AGU, New Orleans, Louisiana.\nAhmad, H., Jose, F., Islam, M. S., & Jhara, S. I. Sustainable Development through the Synergy of Green Energy and Blue Economy in Bangladesh. 1st International Conference on Oceanographic 2024 (ICO-2024), BORI, Cox’s Bazar, Bangladesh.\nHafez Ahmad, L. E. Miranda, Corey G. Dunn, Mike Colvin. Hydrological connectivity patterns in oxbow lakes of the Lower Mississippi Alluvial Valley. 153rd Annual Meeting of the American Fisheries Society, 2023.\nDevin. M. Raburn, Hafez Ahmad, Patrick Allison Jr., Susan B. Adams, Zanethia C. Barnett, Ryan Garrick, Kenneth A. Sterling, Sara Cathey, Michael E. Colvin, and Corey G. Dunn. Uncharted waters: high-resolution stream networks reveal hidden habitats for petitioned headwater crayfishes. Southern Division of the American Fisheries Society, 2023.\nHafez Ahmad, L. E. Miranda, Corey G. Dunn, Mike Colvin. A systematic review on hydrological connectivity relevant to oxbow lakes: Research concepts, progress, approaches, scales, and future directions. 49th Annual Meeting of the MSAFS, 2023.\nHafez Ahmad, L. E. Miranda, Corey G. Dunn, Mike Colvin. Assessing the Relationship between Hydrological Connectivity and Fish Assemblage in the Mississippi Alluvial Valley Floodplain. MSU Graduate Research Symposium, 2023.\nHafez Ahmad and Felix Jose. Spatiotemporal variability of SST and primary productivity in the Bay of Bengal. STEM Undergraduate Research and Internship Symposium, 2019, Florida Gulf Coast University, Florida, USA.\nKelly Chase, Hafez Ahmad and James Douglass. Are invertebrates in tape grass beds as diverse and productive as those in seagrass beds? STEM Undergraduate Research and Internship Symposium, 2019, Florida Gulf Coast University, Florida, USA.\nHafez Ahmad, Shakila Islam Jhara, and Md. Wahidul Alam. Collaborative approach and role of the marine spatial planning to support integrated coastal zone management in Bangladesh. 8th International Conference on Water and Flood Management (ICWFM 2021), 29-31 March 2021, Dhaka, Bangladesh."
  },
  {
    "objectID": "research/index.html#reviewers-n-number-of-article-reviewed-by-me",
    "href": "research/index.html#reviewers-n-number-of-article-reviewed-by-me",
    "title": "Research",
    "section": "Reviewers (N= Number of Article reviewed by me)",
    "text": "Reviewers (N= Number of Article reviewed by me)\n\nRemote Sensing Applications: Society and Environment (7)\nJournal of Coastal Research (5)\nEnvironmental Monitoring and Assessment (2)\nScientific Reports (1)\nRemote Sensing of Environment (1)\nJournal of Applied Life Sciences and Environment (1)\nEnvironmental Research (1)\nJournal of hydrology (1)\nEstuarine, Coastal and Shelf Science (1)\nGeoscience Frontiers (1)\nDiscover Environment (1)\nMitigation and Adaptation Strategies for Global Change (2)\nFrontiers in Marine Science (1)\nJournal of Applied Life Sciences and Environment (1)\nMarine pollution bulletin (1)\nThalassas: An International Journal of Marine Sciences (1)\nFrontiers In Freshwater Science (1)\nB P International Book publisher (2)\nAsian Research Journal of Arts & Social Sciences (1)"
  },
  {
    "objectID": "research/index.html#some-presentations-photos",
    "href": "research/index.html#some-presentations-photos",
    "title": "Research",
    "section": "Some Presentations photos",
    "text": "Some Presentations photos\n\nAmerican Fisheries Society (AFS) Annual Meeting: A snapshot from the 2023 AFS Annual Meeting held in Grand Rapids, Michigan. \nIGARSS 2023 Poster Presentation: Poster presentation at the IGARSS 2023 conference. \nOcean Science Conference 2024, New Orleans, LA: A moment captured during the Ocean Science Conference 2024. \nOcean Science Conference 2024, New Orleans, LA: Another highlight from the Ocean Science Conference 2024. \nNASA Collaboration: Accelerating Informatics for Earth Science: Collaboration with NASA on Earth Science Informatics in 2024. \n** ASLO Conference, 2025 ** \n** Leaky Deltas, 2025 ** \n** Field Trip in Mississippi Sound** \n** Field Trip mostly across Mississippi Sound**"
  },
  {
    "objectID": "research/index.html#certifications-professional-trainings-and-workshops",
    "href": "research/index.html#certifications-professional-trainings-and-workshops",
    "title": "Research",
    "section": "CERTIFICATIONS, PROFESSIONAL TRAININGS, AND WORKSHOPS",
    "text": "CERTIFICATIONS, PROFESSIONAL TRAININGS, AND WORKSHOPS\n\nLeaky deltas: sources or sinks in the global carbon cycle - 2025\nIntroduction to Plankton, Aerosol, Cloud, Ocean Ecosystem (PACE) Hyperspectral Observations for Water Quality Monitoring- 2024\nAnaconda Python for Data Science Professional Certificate- 2024\nNASA PACE satellite hackathon – 2024, August (selected for final participation)\nDelft3D modeling, 2024 by institute for water education.\nLarge Scale Applications of Machine Learning using Remote Sensing for Building Agriculture Solutions by NASA Applied Remote Sensing Training Program- 2024\nAGU Ocean Science Meeting-2024\nCertification- Using Python for Automation-2024\nNASA PACE Applications workshop-2023\nFundamentals of Machine Learning for Earth Science-2023\nGoogle Data Analytics Certificate, Google,2023\nPRIMER 7: Multivariate Analysis in Ecology & Other Sciences-2022\nGeographic Information Systems (GIS) Specialization- 2022\nApplied Data Science with Python Specialization, Coursera- 2022\nMachine Learning A-Z™: Hands-On Python & R in Data Science, Udemy- 2020\nPython for Data Science and Machine Learning Bootcamp, Udemy- 2020\nStatistics for Data Science and Business Analysis, Udemy- 2020\nTensorFlow Developer Certificate in 2022: Zero to Mastery, Udemy- 2020\nBig Data Analytics with GIS, Udemy- 2020\nArcGIS Desktop for Spatial Analysis: Go from Basic to Pro, Udemy- 2020\nObject-based Image Analysis & Classification in QGIS ArcGIS, Udemy- 2020\nComplete Basic GIS Tasks - ArcGIS - Erdas - Remote Sensing, Udemy- 2020\nTaming Big Data with Apache Spark and Python - Hands-On! Udemy- 2020\nPyspark & AWS: Master Big Data with Pyspark and AWS, Udemy- 2020\n“SDGs for Youth: My Goal, My Responsibility” by EMK Center, Dhaka-2019\n“Climate Change in Practice and becoming global citizens for a sustainable society” by the Asian pacific center of Education for international understanding and Ban Ki-moon center-2020.\nGeospatial and Environmental Analysis by University of California, Davis -2020\nJulia Scientific Programming by University of Cape Town -2020\nIntroduction to GIS: Manipulating and Mapping Geospatial Data in R -2020\nLearned Advanced Python Concepts -2020\nR programming hands-on specialization for Data Science -2020\nBecome an expert with ESRI’s GIS software ArcGIS Desktop -2020\nMachine Learning Bootcamp™: Hand-On Python in Data Science -2020\nEcology: Ecosystem Dynamics and Conservation -2020\nLarge Marine Ecosystems: Assessment and Management -2020\nData Analysis with Python -2020\nR Programming -2020\nARSET - Species Distribution Modeling with Remote Sensing-2020\nPreparing to Manage Human Resources -2020\nGeospatial Applications for Disaster Risk Management” -2020\nFishery Oceanography for Future Professionals by ESSO-INCOIS, India-2020\nParticipation in “Social Leadership Hackathon” -2019\nTraining on “First Aid” in American Corner, Chittagong, Bangladesh-2019\nTraining on “Geospatial Regression and Hotspot analysis” at the University of Dhaka, Bangladesh-2018\nTraining on Volunteerism -2015, Chittagong, Bangladesh.\nWorkshops on the “Blue Economy”- 2015."
  }
]