{
  "hash": "b5052eec2577d0be04cb06d9cb567713",
  "result": {
    "markdown": "---\ntitle: \"Basic R\"\nauthor: \"Hafez Ahmad\"\ndate: \"2022-10-16\"\ncategories: [code, analysis]\nimage: \"image.jpg\"\nformat: html\n---\n\n\nYou will find basic R codes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwildtype<- c(103,1125,504,608,794,698,920,535,842,765,945,1005,724,498,727)\nprint(wildtype)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1]  103 1125  504  608  794  698  920  535  842  765  945 1005  724  498  727\n```\n:::\n:::\n\n\n#2. Create variable called \"resistant\"----\n\n\n::: {.cell}\n\n```{.r .cell-code}\nresistant<- c(768, 230, 854 ,637,426, 482, 1118, 524, 604 ,730 ,17 ,421, 587, 782 ,171)\nprint(resistant)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1]  768  230  854  637  426  482 1118  524  604  730   17  421  587  782  171\n```\n:::\n:::\n\n\n#3. combine the the vectors into data frame called \"miner\"----\n\n\n::: {.cell}\n\n```{.r .cell-code}\nminer<- data.frame(\"wild\"=wildtype,\"resist\"=resistant)\nprint(miner)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   wild resist\n1   103    768\n2  1125    230\n3   504    854\n4   608    637\n5   794    426\n6   698    482\n7   920   1118\n8   535    524\n9   842    604\n10  765    730\n11  945     17\n12 1005    421\n13  724    587\n14  498    782\n15  727    171\n```\n:::\n:::\n\n\n#4. Calculate the mean and variance of the wildtype and resistant from the data frame \"miner\"----\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(paste0(\"The mean of wildtype is \",round(x=mean(miner$wild),digits=3),\" and the variance is \",round(x=var(miner$wild),digits=3)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"The mean of wildtype is 719.533 and the variance is 63014.552\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(paste0(\"The mean of resistant is \",round(x=mean(miner$resist),digits=3),\" and the variance is \",round(x=var(miner$resist),digits=3)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"The mean of resistant is 556.733 and the variance is 80529.21\"\n```\n:::\n:::\n\n\n# 5. write a function for standard error called \"stderror\"----\n\nformula for standard error is standard deviation/square root (\\$ \\frac {\\\\sigma} {\\sqrt (n)}\\$) of sample size\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstderror<- function(x,n=length(x)){\n  return(sd(x)/sqrt(n))\n}\n```\n:::\n\n\n#...apply the function to the data frame \"miner\"----\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(paste0(\"The standard error of wildtype is \",round(x=stderror(miner$wild),digits=3)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"The standard error of wildtype is 64.815\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(paste0(\"The standard error of resistant is \",round(x=stderror(miner$resist),digits=3)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"The standard error of resistant is 73.271\"\n```\n:::\n:::\n\n\n#6. write a function for growth rate called \"rate\" ----\n\nwhere, nt is the vector abunace at t,ntplus the vector of abunance at year t+1 and t for vector of years and return plot for growth rate ... load data from laptop\n\n\n::: {.cell}\n\n```{.r .cell-code}\nabundance <- read.csv(\"E:/1 Master's/MSU/course classes/Fall 2022/WFA 8134 RMethod/code/abundance.csv\",header = TRUE)\nhead(abundance)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  year abundance nextabundance\n1    1        10           215\n2    2       215           105\n3    3       105           277\n4    4       277            44\n5    5        44            34\n6    6        34            44\n```\n:::\n:::\n\n\n#... write that functions\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrate<- function(dataframe){\n    nt<- dataframe$abundance # abundance at t\n    ntplus<- dataframe$nextabundance # abundance at t+1\n    t<- dataframe$year # vector of years\n    growthrate<- log(ntplus/nt) # growth rate\n    plot(t,growthrate,type=\"l\",xlab=\"Year\",ylab=\"Growth rate\",main=\"Growth rate of abundance\")\n    return(growthrate)\n}\n```\n:::\n\n\n#... apply it over the dataframe\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrate(abundance)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1]  3.068052935 -0.716677678  0.970057156 -1.839827872 -0.257829109\n [6]  0.257829109  2.087928156  0.514761530 -1.068759326 -0.807260487\n[11]  0.836248024  0.762140052 -0.179658439  0.644091024 -0.073893126\n[16] -0.055655784 -0.024136329 -0.048383081  0.196466064  0.061285342\n[21] -0.114650563  0.110679677  0.027470661  0.053999307  0.082109406\n[26]  0.239229689 -0.429692403  0.038749003 -0.059396674  0.336869535\n[31]  0.179503953 -0.049329729 -0.224888752 -0.071256817 -0.135375329\n[36] -0.106106506 -0.007490672  0.151784833  0.033039854  0.103233255\n[41]  0.130850237  0.085278918 -0.016483890 -0.231721325  0.105942418\n[46]  0.010416761  0.114438358  0.050461155 -0.005286356 -0.084765267\n```\n:::\n\n::: {.cell-output-display}\n![Calculated Growth rate of abundance dataframe using following formula$r=ln(Nt+1)/Nt$.](index_files/figure-html/fig-growth_rate_plot-1.png){#fig-growth_rate_plot width=672}\n:::\n:::\n\n\n```{1+2}\n```\n\ngit commit -m \"comments\"\n\ngit add .\n\ngit push -f origin master\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}